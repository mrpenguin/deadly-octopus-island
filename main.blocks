<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="BLOCKLY_TILESET_TYPE" id="MAULo:(*{w`Jon;T7Hrb">0;16;16;0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</variable><variable type="BLOCKLY_TILESET_TYPE" id="[Z%y,l@zUz]O![75EUO/">2;8;8;bbbbbbbbeebebbbbbbbbbbbbbbbbebeebbbbbbbbbbeeeebebbbbbbbbebbebbbe</variable><variable type="BLOCKLY_TILESET_TYPE" id="`3mi)RKGR!2oS!#R)z5+">3;8;8;eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="ZgYx.V$1/w`8PA-!3FGZ">4;8;8;7777777777777777777777777777777777777777777777777777777777777777</variable><variable type="BLOCKLY_TILESET_TYPE" id="{Qu=XuO|0;i,fNQJm)pp">5;8;8;8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="it6tfRs^w,MFBX9:4_=j">6;8;8;5755557575777757757777577577775775777757757777577577775757555575</variable><variable type="BLOCKLY_TILESET_TYPE" id="z[P$uk[V4y[M_40;BW4^">7;8;8;bbbbbbbbeeeeeeeedddddddd8888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="[)jloAdy;bGj$_|JLW/Y">8;8;8;8888888888888888888888888888888888888888ddddddddeeeeeeeebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="zc3?sH{%iO($7FKpC%dI">9;8;8;eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888ebddddddebeeeeeebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="=R/bxRkuXW41$z3s~5oB">10;8;8;bbbbbbbbeeeeeebeddddddbe8888d8be8888d8be8888d8be8888d8be8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="TS9{-sq?UTE4`BKYjw!N">11;8;8;8888d8be8888d8be8888d8be8888d8be8888d8beddddddbeeeeeeebebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="xhU0LN#S?|,=z@Bm0:0[">12;8;8;bbbbbbbbebeeeeeeebddddddeb8d8888eb8d8888eb8d8888eb8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="#fXiBaJhv9EBSAN)2_{,">13;8;8;8888d8be8888d8ee8888d8dd8888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="uy|!CU?lFnw$0_2rcU(3">14;8;8;eb8d8888ee8d8888dd8d88888888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="=Jau0G%3HbP`ORmRX?=,">15;8;8;8888888888888888888888888888888888888888dd8d8888ee8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id=";7Q,T/eisV~0RJvoNo.Z">16;8;8;88888888888888888888888888888888888888888888d8dd8888d8ee8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="*fL_D8(ego3^vne:h|sb">17;8;8;bbbbbbbbbb33b3bbbbb33bbbbbb33bbbbb33b3bbbbb3bbbbbbb3bbbbbbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="XVK|Hy2hsw_S{=qj!KMO">18;8;8;bdbbbbdbdbbbbbbdbbbddbbbbbdbbdbbbbdbbdbbbbbddbbbdbbbbbbdbdbbbbdb</variable><variable type="BLOCKLY_TILESET_TYPE" id="Vh,a2-O8dK|U$+q@^OAL">19;8;8;bbbbbbbbbb22b2bb2bbb2bbb2bbbbbbbbb22b2bbbbbb2bbb2bbb2bbbbb22b2bb</variable><variable type="BLOCKLY_TILESET_TYPE" id="F75kyQ2;e4TF+Prt}Pn=">20;8;8;4444444444444444555555554444444444444444555555554444444444444444</variable><variable type="BLOCKLY_TILESET_TYPE" id="S$HMl1(cDYA;1pR7:R,_">21;8;8;4445544444455444444554444445544444455444444554444445544444455444</variable><variable id="v]obH95)3*PoD/MX8geE">sharkSeekPath</variable><variable id="T*dhVb)$uam^)/in6|U}">hitBuffer</variable><variable id="#TV26JCG3p]UeCym@,A9">tileSize</variable><variable id="*|`F:Fy.JrOL.[4maI+u">mySprite</variable><variable id="KkgC-r`,r)BoCv/9.SKc">octopus</variable><variable id="X[Z[;|-]9`xHH.Q}=(V_">shark</variable><variable id="z,Z(T$!MEacsL{{4^26w">coin</variable><variable id="6B`H[9#lRN19`[%pj7{u">coinTiles</variable><variable id="^YC,q,%Zmn7n_29w?`#7">playerSpawnTile</variable><variable id="_T61i~l*9%vy0PV2(A^]">octopusSpawnTile</variable><variable id="Em%vy}5hmi]_=Ca]A2BS">sharkSpawnTile</variable><variable type="KIND_SpriteKind" id="=|TqcI{4Q{Uilsf_$S`@">Player</variable><variable type="KIND_SpriteKind" id="TB[z!b(;,mRbt_Djh(3w">Projectile</variable><variable type="KIND_SpriteKind" id="Rvt0k}vrx?ZZ3K1a33/2">Food</variable><variable type="KIND_SpriteKind" id="?tt4~//TnD7+ex^U^DC_">Enemy</variable></variables><block type="pxt-on-start" id="1AwfjQ!$q=.Gk-!FQ(cp" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="9Ok-B%*fpfNQi-C50!2X" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkSeekPath:Array&lt;PathPosition&gt; = []" numlines="1" declaredvars="sharkSeekPath"></mutation><next><block type="variables_set" id="vD[!aM]y?aaGyI+pAk!H"><field name="VAR" id="T*dhVb)$uam^)/in6|U}">hitBuffer</field><value name="VALUE"><shadow type="math_number" id="KNKF1ze4*pa!m6`!|~8)"><field name="NUM">4</field></shadow></value><next><block type="variables_set" id="k)OG{p/SS:naW8YJx8MJ"><field name="VAR" id="#TV26JCG3p]UeCym@,A9">tileSize</field><value name="VALUE"><shadow type="math_number" id="*z1,.p3GE7Sp=x2]V@Vs"><field name="NUM">8</field></shadow></value><next><block type="typescript_statement" id="@hlI#R-=(8h5p1S{MpX7" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Point {" line1="    x: number" line2="    y: number" line3="    tile: Image = null" line4="    constructor(x: number = 0, y: number = 0) {" line5="        this.x = x" line6="        this.y = y" line7="    }" line8="    getColumn():number{" line9="        return Math.floor(this.x / tileSize);" line10="    }" line11="    getRow():number{" line12="        return Math.floor(this.y / tileSize);" line13="    }" line14="    equals(otherPoint:Point):boolean{" line15="        return this.x === otherPoint.x &amp;&amp; this.y === otherPoint.y" line16="    }" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id=",-k$o%(1,m{(e0zG9j_F" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class PathPosition{" line1="    point: Point" line2="    distanceFromTarget: number" line3="    distanceFromParent: number" line4="    pathParent: Point" line5="    constructor(point:Point){" line6="        this.point = point" line7="    }" line8="    calculateDistance(otherPosition: PathPosition): number {" line9="        //using Manhattan calculation since shark can only move four directions" line10="        return Math.abs(otherPosition.point.x - this.point.x) + Math.abs(otherPosition.point.y - this.point.y)" line11="    }" line12="    findTotalDistance():number{" line13="        return this.distanceFromTarget + this.distanceFromParent" line14="    }" line15="}" numlines="16"></mutation><next><block type="typescript_statement" id="/3(DC2x+v]YH=?S/a$%?" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let playerPosition:Point = new Point(0,0)" numlines="1" declaredvars="playerPosition"></mutation><next><block type="typescript_statement" id="2.]2v;?_ZVXIX3o0qMWM" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let octopusPosition:Point = new Point(0,0)" numlines="1" declaredvars="octopusPosition"></mutation><next><block type="typescript_statement" id="pRUp%*OhlDP;IkxAu5]I" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkPosition:Point = new Point(0,0)" numlines="1" declaredvars="sharkPosition"></mutation><next><block type="variables_set" id="iRtpKJG69aHvT|Zn?Fyn"><field name="VAR" id="*|`F:Fy.JrOL.[4maI+u">mySprite</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="~QL1s_s-V1g.P@tJ-1sU"><value name="img"><shadow type="screen_image_picker" id="^Adji}[i15_9MF17o~7Z"><field name="img">img`
. . . . . . . . 
. . . 1 1 . . . 
. . 1 1 1 1 . . 
3 4 1 1 1 1 4 3 
3 4 4 1 1 4 4 3 
. . 4 1 1 4 . . 
. . 1 1 1 1 . . 
. . . . . . . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="gn@gwAvw/lkvU|UILYYW"><field name="MEMBER">Player</field></shadow></value></block></value><next><block type="variables_set" id="c,E{d=1|WWEPENMX-vK6"><field name="VAR" id="KkgC-r`,r)BoCv/9.SKc">octopus</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="VxU@xbUczTAO%:uI#}UI"><value name="img"><shadow type="screen_image_picker" id="1./2UO:T.=gh+.@sPHdJ"><field name="img">img`
. a d d d . . . . . . . a d d d d d . . . . . . . . a a d d . . 
a d d . . . . . . . . a d d d d d d d d . . . . . a d d d d d . 
a d . . . . . . . . a d d 1 . . . . . d d . . . . a d . . . d d 
a d . . . . . . . . a d 1 . . . . . . . . . . . a d 1 . . . d d 
a d . . . . . . . . a d 1 . . . . . . . . . . a d d 1 . . . . d 
a d 1 . . . . . . . a d d d . . . . . . . . a d d d 1 . . . . . 
a d d 1 . . . . . . a d d a a a a a d d . . a d d d . . . . . . 
. a d d 1 . . . . . . a a d d d d d d d d d d d 1 . . . . . . . 
. . a d d d d d d . a d d d d d a d d d d d d d 1 . . . . . . . 
. . . a a d d d d a d d d a d d d d d d a d d d . . . . . . . . 
. . . . . a d d d a d d d d d d d d d d d d d d . . . . . a d . 
. . . . . . a a a d d d d d d d d a d d d d d d d . a a a d d d 
. . . . . . . . a d d a d d d d d d d d d d a d d a d d d d d d 
. . . . . . . . d d d d d d d d d d d d d d d d d d d 1 1 . d d 
. . . . . . . . d d d d d d d 1 1 1 d d d d d d d d d . . . d d 
. . . . . . . . d d d d d d 1 a a a 1 d d d d d d . . . . . . d 
. . . . . . . a d d d d d d 1 a d a 1 d d d d d 1 . . . . d d d 
. . . . . . a d d d d d d d 1 a d a 1 d d d d d 1 . . . . d d . 
. . . . a a d d d d d d d d 1 a a a 1 d d d d 1 d . . . . d . . 
. . a a d d d d d d d d d d d 1 1 1 d d d d d 1 d d 1 . . . . . 
. a d d d d d 1 1 1 d d d d d d d d d d d d d d d d 1 . . . . . 
a d d d d . . . . . a a d d d d d d d d 1 1 . d d d d 1 . . . . 
a d d d . . . . . a d d d d d d d 1 1 1 d 1 . . . d d d 1 . . . 
a d d . . . . . . a d d d d . . . d d d d 1 . . . a d d 1 . . . 
a d d . . . . . . a d d . . . . . . a d d 1 . . . . . d d 1 . . 
a d d . . . . . . a d d . . . . . . . a d d 1 . . . . d d 1 . . 
a d d . . . . . a d d . . . . . . . . . a d 1 . . . . a d d 1 . 
d d . . . . . . a d d . . . . . . . . . a d d . . . . . d d d . 
d d . . . . . . a d d . . . . . . . . . . d d d . . . . . d d d 
d d . . . . . . a d d . . . . . . . . d . . d d . . . . . . a d 
d d d . . . . . . a d . . . . . . . . d d d d d . . . . . . d d 
. d d . . . . . . . d d d . . . . . . . d d d . . . . . . d . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="ek/[0)EKl.~Cz=8Au]sC"><field name="MEMBER">Enemy</field></shadow></value></block></value><next><block type="variables_set" id=".]4)zD!C^xm|/VBwXyGr"><field name="VAR" id="X[Z[;|-]9`xHH.Q}=(V_">shark</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="{CAe[SSJOs9IACq67ZQq"><value name="img"><shadow type="screen_image_picker" id="V^G:oU7y_0ymkyBGv*p1"><field name="img">img`
. . . . 8 d d . 
. . . 8 d d . . 
. . 8 d 1 . . . 
. 8 d d 1 . . . 
. 8 d d d 1 . . 
. d d d d d 1 . 
7 d d d d d d 7 
. 7 7 7 7 7 7 . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="uR~kp=[D:^zXrN=IlThR"><field name="MEMBER">Enemy</field></shadow></value></block></value><next><block type="variables_set" id="}E^VY!*69=*vsVY;hu`)"><field name="VAR" id="z,Z(T$!MEacsL{{4^26w">coin</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="o13.7#qZg+ALD!TIeC22"><value name="img"><shadow type="screen_image_picker" id=",sZ)5:NVJp/2`omcID|2"><field name="img">img`
. . 4 4 4 4 . . 
. 4 5 5 5 5 4 . 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
. 4 5 5 5 5 4 . 
. . 4 4 4 4 . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="t0/Gx,s64i3{$@S7`/gT"><field name="MEMBER">Food</field></shadow></value></block></value><next><block type="game_control_sprite" id="ZQ5E#x~uY!ch=*l^y1*%"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="sprite"><shadow type="variables_get" id="%rrz%)Ig`Yv@)W{CIm=D"><field name="VAR" id="*|`F:Fy.JrOL.[4maI+u">mySprite</field></shadow></value><next><block type="camerafollow" id="QRIc@/P[_8PTE^{HaAWq"><value name="sprite"><shadow type="variables_get" id="jNsdXAqAe{AnGA}oz$sK"><field name="VAR" id="*|`F:Fy.JrOL.[4maI+u">mySprite</field></shadow></value><next><block type="tilemap_editor" id="DR^ElrCDFQsdsC-uF}km"><field name="tilemap">tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21],
            TileScale.Eight
        )</field><next><block type="console_log" id="I+5Rba,uIzI.1v92apsi"><value name="value"><shadow type="text"><field name="TEXT"/></shadow><block type="typescript_expression" id="45tfx!.69i4Y.=3QcXf#" editable="false"><field name="EXPRESSION">tiles.getTileAt(-1, 0)</field></block></value><next><block type="variables_set" id="hh7q9?pn9yXlxT99fE%["><field name="VAR" id="6B`H[9#lRN19`[%pj7{u">coinTiles</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="mapgettilestype" id="Ir|O`qas.H,.0OL!,=;B"><value name="tile"><shadow type="tileset_tile_picker" id="`x|s5)Ph$0suNdIBq[wE"><field name="tile">myTiles.tile6</field></shadow></value></block></value><next><block type="typescript_statement" id="K)%7F4doJQfy]`_DY;~w" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="coinTiles.forEach(function (value: tiles.Location, index: number) {" line1="    let newCoin = sprites.create(coin.image, SpriteKind.Food)" line2="    tiles.placeOnTile(newCoin, value)" line3="    tiles.setTileAt(value, myTiles.tile4);" line4="})" numlines="5"></mutation><next><block type="variables_set" id="vmj5_NnC/_vziM[jHJF#"><field name="VAR" id="^YC,q,%Zmn7n_29w?`#7">playerSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="~)LyzU$yMsn.K0^P($jc"><value name="LIST"><block type="mapgettilestype" id="F7+lR$@iKXw63Bx;}G7X"><value name="tile"><shadow type="tileset_tile_picker" id="I~i*#q=`OU)3ZObv9[9a"><field name="tile">myTiles.tile17</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="5!m$lHC+.`],tLY`=736"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="^_-RENYvT{_K7{t)3-/w"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="qLt@]V?N+|_.WQTYJ=#-"><field name="VAR" id="*|`F:Fy.JrOL.[4maI+u">mySprite</field></block></value><value name="value"><block type="typescript_expression" id="XNX-e~Mv(4l_XaBou(UJ" editable="false"><field name="EXPRESSION">playerPosition.x = playerSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="gK.H09nY(/_+JF:?W8{t"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="c,ymPzFb3cMCA5U/39CV"><field name="VAR" id="*|`F:Fy.JrOL.[4maI+u">mySprite</field></block></value><value name="value"><block type="typescript_expression" id="WKF!q@[gD3-@xF2g!Iwf" editable="false"><field name="EXPRESSION">playerPosition.y = playerSpawnTile.y</field></block></value><next><block type="mapsettileat" id="7H9UAen*]%i96v)8wgIJ"><value name="tile"><shadow type="tileset_tile_picker" id="NK.FA|{M|8H}ZZT(E.dv"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="^JFFvm`;]n8q:PxyGf.!"><field name="VAR" id="^YC,q,%Zmn7n_29w?`#7">playerSpawnTile</field></block></value><next><block type="variables_set" id="C[wAhuuBJWhFK#45H$W["><field name="VAR" id="_T61i~l*9%vy0PV2(A^]">octopusSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="da%pXbNUnO!WJ/AW^Bt6"><value name="LIST"><block type="mapgettilestype" id="@P5a6oLdQ1lznk!cl2oH"><value name="tile"><shadow type="tileset_tile_picker" id="L/5(AEwj/hwxSC=/$A~["><field name="tile">myTiles.tile18</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="N9:=:+tOt%{rxNP3^$=o"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id=";SASZyWFX#P?7fwo8z62"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id=")wm^}k}A$J(351oW=nv["><field name="VAR" id="KkgC-r`,r)BoCv/9.SKc">octopus</field></block></value><value name="value"><block type="typescript_expression" id="QmiMG+o)Lrd`EJeFLjmC" editable="false"><field name="EXPRESSION">octopusPosition.x = octopusSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="ty^9Q.D;x1)c!/~_$dye"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="?p9;#$Ftb/6hdnziw%mL"><field name="VAR" id="KkgC-r`,r)BoCv/9.SKc">octopus</field></block></value><value name="value"><block type="typescript_expression" id="]Gca:uU|rIGgkKP}4JhS" editable="false"><field name="EXPRESSION">octopusPosition.y = octopusSpawnTile.y</field></block></value><next><block type="mapsettileat" id=".uaOS0ejH2X=ys?[vW[e"><value name="tile"><shadow type="tileset_tile_picker" id="E,Lw:oxlL+`^1S/aCLr}"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="WHeQ`Ak|j;${6*#!PP=K"><field name="VAR" id="_T61i~l*9%vy0PV2(A^]">octopusSpawnTile</field></block></value><next><block type="variables_set" id="ki7m8xt5:~c|[Oe0-`zg"><field name="VAR" id="Em%vy}5hmi]_=Ca]A2BS">sharkSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="xpBv6a!QCw~J5Ph5,KP1"><value name="LIST"><block type="mapgettilestype" id="_^^,ucj^$D9^I4z5yof_"><value name="tile"><shadow type="tileset_tile_picker" id="/E;mEH98;onL`jL.wp5I"><field name="tile">myTiles.tile19</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="L]@1=(=B}HFid]nXF3;2"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="l!YQlK]tJ5C[5UlU)8E("><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="gZr8(9-S+/_6KB1BQYZy"><field name="VAR" id="X[Z[;|-]9`xHH.Q}=(V_">shark</field></block></value><value name="value"><block type="typescript_expression" id=")A;H,4#^owP;x?GOWrW)" editable="false"><field name="EXPRESSION">sharkPosition.x = sharkSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="%zBvr#96%O?vNPmCg,[#"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="Z_RdmPv^wB^3onT%j}/]"><field name="VAR" id="X[Z[;|-]9`xHH.Q}=(V_">shark</field></block></value><value name="value"><block type="typescript_expression" id="z-fO^Yxm[/k`$a,ve7Kx" editable="false"><field name="EXPRESSION">sharkPosition.y = sharkSpawnTile.y</field></block></value><next><block type="mapsettileat" id="VDW7~5nubz3-5JiBL}Hs"><value name="tile"><shadow type="tileset_tile_picker" id="sI?[kZUs2d,baGltsk/o"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="d}Dux=XTv(F051~(M1@["><field name="VAR" id="Em%vy}5hmi]_=Ca]A2BS">sharkSpawnTile</field></block></value><next><block type="typescript_statement" id="-kDu!@O%/Z+fdP]9S@;(" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkTargetTile = new Point();" numlines="1" declaredvars="sharkTargetTile"></mutation><next><block type="typescript_statement" id="/-n[jD@$Y5Xl8I,6v@~p" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function positionToTile(position:number, tileSize:number):number {" line1="    return Math.floor(position/tileSize);" line2="}" numlines="3"></mutation><next><block type="typescript_statement" id="cm,oz-7hl??{?GE9#J^?" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function isWaterTile(tileImage:Image):boolean {" line1="    if(tileImage == myTiles.tile2 || " line2="        tileImage == myTiles.tile3 ||" line3="        tileImage == myTiles.tile5 ||" line4="        tileImage == myTiles.tile7 ||" line5="        tileImage == myTiles.tile8 ||" line6="        tileImage == myTiles.tile9 ||" line7="        tileImage == myTiles.tile10 ||" line8="        tileImage == myTiles.tile11 ||" line9="        tileImage == myTiles.tile12 ||" line10="        tileImage == myTiles.tile13 ||" line11="        tileImage == myTiles.tile14 ||" line12="        tileImage == myTiles.tile15 ||" line13="        tileImage == myTiles.tile16){" line14="        return true" line15="    }" line16="    return false" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="NA~xBd/%}Nyu?#R%|ge@" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function isLandTile(tileImage:Image):boolean{" line1="    if(tileImage == myTiles.tile4){" line2="        return true" line3="    }" line4="    return false" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="Wn$*n6SfxU.9kf3%HG%H" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function checkLandBoundsCollision(character:Sprite, lastPosition:Point):Point{" line1="    let newTile: Image = tiles.getTileAt(positionToTile(character.x, tileSize), positionToTile(character.y, tileSize))" line2="    if (lastPosition.tile == null) {" line3="        lastPosition.tile = newTile" line4="    }" line5="" line6="    if (isLandTile(newTile) &amp;&amp; isWaterTile(lastPosition.tile) || " line7="        isWaterTile(newTile) &amp;&amp; isLandTile(lastPosition.tile)) {" line8="            //todo: determine whether it's a horizontal or vertical collision and limit movement" line9="            //also need to check whether the other position change results in a tile collision, like in a corner" line10="        character.x = lastPosition.x" line11="        character.y = lastPosition.y" line12="        return lastPosition;" line13="    }" line14="    lastPosition.x = character.x" line15="    lastPosition.y = character.y" line16="    lastPosition.tile = newTile" line17="    return lastPosition" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="Y#dn0MjuTcMSnMm77Az8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findOctopusMovePosition(octopusPosition: Point, playerPosition: Point, buffer:number): Point {" line1="    let moveLeft: boolean = playerPosition.x &lt; octopusPosition.x - buffer" line2="    let moveRight: boolean = playerPosition.x &gt; octopusPosition.x + buffer" line3="    let moveUp: boolean = playerPosition.y &lt; octopusPosition.y - buffer" line4="    let moveDown: boolean = playerPosition.y &gt; octopusPosition.y + buffer" line5="    let moveRate: number = .4" line6="" line7="    if (moveLeft) {" line8="        octopusPosition.x -= moveRate" line9="    } else if (moveRight) {" line10="        octopusPosition.x += moveRate" line11="    }" line12="    if (moveUp) {" line13="        octopusPosition.y -= moveRate" line14="    } else if (moveDown) {" line15="        octopusPosition.y += moveRate" line16="    }" line17="    return octopusPosition" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="@ST318-!q9//QN,_p0{:" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function seekPath(startingTile: Point, targetTile: Point, " line1="    openTiles: Array&lt;PathPosition&gt;, closedTiles: Array&lt;PathPosition&gt;): Array&lt;PathPosition&gt;{" line2="        let shortestPathTile:PathPosition = null" line3="        while(openTiles.length &gt; 0){" line4="            shortestPathTile = findShortestPathTile(openTiles)" line5="            openTiles.removeElement(shortestPathTile)" line6="            closedTiles.push(shortestPathTile)" line7="" line8="        }" line9="    /*while the open list is not empty" line10="    a) find the node with the least f on" line11="       the open list, call it &quot;q&quot;" line12="" line13="    b) pop q off the open list" line14="" line15="    c) generate q's 8 successors and set their" line16="       parents to q" line17="" line18="    d) for each successor" line19="        i) if successor is the goal, stop search" line20="          successor.g = q.g + distance between" line21="                              successor and q" line22="          successor.h = distance from goal to" line23="          successor (This can be done using many" line24="          ways, we will discuss three heuristics-" line25="          Manhattan, Diagonal and Euclidean" line26="          Heuristics)" line27="" line28="          successor.f = successor.g + successor.h" line29="" line30="        ii) if a node with the same position as" line31="            successor is in the OPEN list which has a" line32="           lower f than successor, skip this successor" line33="" line34="        iii) if a node with the same position as" line35="            successor  is in the CLOSED list which has" line36="            a lower f than successor, skip this successor" line37="            otherwise, add  the node to the open list" line38="     end (for loop)" line39="" line40="    e) push q on the closed list" line41="    end (while loop)*/" line42="    return []" line43="}" numlines="44"></mutation><next><block type="typescript_statement" id="W6Ye0I#!ZZ9LVaktEJGW" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findShortestPathTile(openTiles:Array&lt;PathPosition&gt;):PathPosition{" line1="    let shortestPath:PathPosition = null" line2="    openTiles.forEach(function (value: PathPosition, index: number) {" line3="        if(shortestPath != null){" line4="            if(value.findTotalDistance() &lt; shortestPath.findTotalDistance()){" line5="                shortestPath = value" line6="            }" line7="        } else{" line8="            shortestPath = value" line9="        }" line10="    })" line11="    return shortestPath" line12="}" numlines="13"></mutation><next><block type="typescript_statement" id="o3%-.f5Z.g1d_1qZGH]O" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function getSurroundingPathTiles(tile:PathPosition):Array&lt;PathPosition&gt;{" line1="    let results = []" line2="    if(tile.point.y - tileSize &gt; 0){" line3="        results.push(new PathPosition(new Point(tile.point.x, tile.point.y - tileSize)))" line4="    }" line5="    /*if (tile.point.x + tileSize &lt;= levelImage.width * tileSize) {" line6="        results.push(new PathPosition(new Point(tile.point.x + tileSize, tile.point.y)))" line7="    }*/" line8="" line9="    return results" line10="}" numlines="11"></mutation><next><block type="typescript_statement" id="H|v3F]Pt(eRd*;SBf],;" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findSharkMovePosition(sharkPosition: Point, seekPath:Array&lt;Point&gt;):Point{" line1="" line2="    //need to keep track of tile position of player and only recalculate if the player has changed tiles" line3="" line4="    return sharkPosition" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="FJ;R~:*mU[KCA}dlP@mv" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findSharkTargetTile(playerPosition: Point): Point {" line1="    let resultGridSpot = new Point()" line2="    if(isWaterTile(playerPosition.tile)){" line3="        resultGridSpot.y = playerPosition.y" line4="        resultGridSpot.x = playerPosition.x" line5="        return resultGridSpot" line6="    }" line7="    //todo: implement roaming" line8="" line9="    return resultGridSpot" line10="}" numlines="11"></mutation><next><block type="typescript_statement" id="ivHFf}*|+g{%1d+TjSVl" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function moveGameSprite(position:Point, sprite:Sprite):void {" line1="    sprite.x = Math.floor(position.x)" line2="    sprite.y = Math.floor(position.y)" line3="}" numlines="4"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="spritesoverlap" id="!:tTl=@q?Brl5$4kL7Qs" x="510" y="150"><value name="HANDLER_DRAG_PARAM_sprite"><shadow type="argument_reporter_custom" id="eK_$0E[#(DB4n5f|@NWT"><mutation typename="Sprite"/><field name="VALUE">sprite</field></shadow></value><value name="kind"><shadow type="spritekind" id="1d!Z1NC$fgj%|3+=LPal"><field name="MEMBER">Player</field></shadow></value><value name="HANDLER_DRAG_PARAM_otherSprite"><shadow type="argument_reporter_custom" id="gg?d~06vFuG*|AzmkCZ="><mutation typename="Sprite"/><field name="VALUE">otherSprite</field></shadow></value><value name="otherKind"><shadow type="spritekind" id="0d6Ga+t%KIOR)E(*yCX:"><field name="MEMBER">Food</field></shadow></value><statement name="HANDLER"><block type="hudsetScore" id="Qf?=;f(XtWl_k1Vx[zHG"><value name="value"><block type="math_arithmetic" id="|}ZQvjbMttc9EpgrVAqo"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="hudScore" id="!|G*=J_+yM=:6Z#fE,QU"/></value><value name="B"><shadow type="math_number" id="BT!$O}IB19rC#(2A+j,D"><field name="NUM">1</field></shadow></value></block></value><next><block type="spritedestroy" id="Rp2i[r+SGwzkW;?7I]$$"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="sprite"><block type="argument_reporter_custom" id="E}k:dfkor;mL*+#:8l)5"><mutation typename="Sprite"/><field name="VALUE">otherSprite</field></block></value></block></next></block></statement></block><block type="gameupdate" id="lg2YLWa@%Xo*ad;h_O_`" x="490" y="470"><statement name="HANDLER"><block type="typescript_statement" id="glz;s@5sMhyK[;S]ms~|" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="playerPosition = checkLandBoundsCollision(mySprite, playerPosition)" numlines="1"></mutation><next><block type="typescript_statement" id="r-r9CuA~35Q5k,9LF,;-" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="octopusPosition = findOctopusMovePosition(octopusPosition, playerPosition, hitBuffer)" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">move octopus</comment><next><block type="typescript_statement" id="48-f6c~RiMBN:g}jBkKp" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="moveGameSprite(octopusPosition, octopus)" numlines="1"></mutation><next><block type="typescript_statement" id="^p~B/Qo6bXDR*Rn6JGku" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkTargetTile = findSharkTargetTile(playerPosition)" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">move shark</comment><next><block type="controls_if" id="?^JhPM[pjfKvW=4]v+%N"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="?zQ1IlX!Y.MBde,7B+pE"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="BcS]b.VeH_qw?HoXk^dH"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="G_+T7c[]YsWYY363nMj}" editable="false"><field name="EXPRESSION">sharkTargetTile.getColumn()</field></block></value><value name="B"><shadow type="math_number" id="k*?vL4`PJYE%H$W@#_hl"><field name="NUM">0</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="hT%cmRs)H@al[efh7`wz"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="*(h8=F5,DSAT4G92AxP#" editable="false"><field name="EXPRESSION">sharkTargetTile.getRow()</field></block></value><value name="B"><shadow type="math_number" id="TN{|te!6p^fp2B{06UUF"><field name="NUM">0</field></shadow></value></block></value></block></value><statement name="DO0"><block type="controls_if" id="[5XW=%IGp$EiQdrQD-j["><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="qe?y)n,Y,mD8z|/0msPx"><field name="OP">OR</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="pBM+{Y.6Q%uU9]C!f#LI"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id="sP3/^711p3=PAxZ,6byv"><value name="VALUE"><block type="variables_get" id="xtxBntOvmWfWK5h|suMc"><field name="VAR" id="v]obH95)3*PoD/MX8geE">sharkSeekPath</field></block></value></block></value><value name="B"><shadow type="math_number" id="IPRx[h/k:4-OQJrgQfe#"><field name="NUM">0</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id=",{]qF-)Ce0G)B$`~knER"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="typescript_expression" id="rYzhH}Y;{?tM7]/`+F~A" editable="false"><field name="EXPRESSION">(sharkTargetTile.equals(sharkSeekPath[sharkSeekPath.length - 1].point))</field></block></value></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="{20v^+^p%xdvQyOxXknk" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkSeekPath = seekPath(sharkPosition, sharkTargetTile, [], [])" numlines="1"></mutation></block></statement></block></statement></block></next></block></next></block></next></block></next></block></statement></block></xml>