<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="~haG8To/Q~M)DjFunIi4">sharkSeekPath</variable><variable id="%-2(/Q.I+3Nq98ff{`3/">hitBuffer</variable><variable id="*_umw@Mwi3]`DXD[i8Al">tileSize</variable><variable id="Mdswd.!64[,}9ddX:yk$">playerMoveSpeed</variable><variable id=";M#-g[E[k724l9eoAN]D">mySprite</variable><variable id="a(E0/XnZk7D}l_(4ijVJ">octopus</variable><variable id="Sj(W?NCe@8^7#5}ZI`j,">shark</variable><variable id="r#E7fhJrM:ovPZxsOkE;">coin</variable><variable id="PlAWR?5AKb[VB[#w(NAR">coinTiles</variable><variable id="Wr5Cb6uCTKRZ454+KdIF">playerSpawnTile</variable><variable id="jGg]EnK=rLb6#-$E./qg">octopusSpawnTile</variable><variable id="bTqMk/hPw:Ox/H2!j)-a">sharkSpawnTile</variable><variable type="KIND_SpriteKind" id=":Ug}?]U{#92pQ=EeZH=h">Player</variable><variable type="KIND_SpriteKind" id="iyncyWU=C=Y5rC|x.WZe">Projectile</variable><variable type="KIND_SpriteKind" id="jxB)8O9|7jNew7*YwyKY">Food</variable><variable type="KIND_SpriteKind" id="u0kVCa%zdN7UG9[JOdTD">Enemy</variable><variable type="BLOCKLY_TILESET_TYPE" id="Wl9QWk9S2Ya7$n%0pr2S">0;16;16;0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</variable><variable type="BLOCKLY_TILESET_TYPE" id="(L|AKU3(RT){3CO1o]BI">2;8;8;bbbbbbbbeebebbbbbbbbbbbbbbbbebeebbbbbbbbbbeeeebebbbbbbbbebbebbbe</variable><variable type="BLOCKLY_TILESET_TYPE" id="W%s|T9Zl~t)qU**UJOKd">3;8;8;eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="_VnV4?-uH|u-)Sc%_4.p">4;8;8;7777777777777777777777777777777777777777777777777777777777777777</variable><variable type="BLOCKLY_TILESET_TYPE" id="]=6uyTIjJ,6gxGO|iszm">5;8;8;8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="va8Sy:h7F+}N^aoyK*Nz">6;8;8;5755557575777757757777577577775775777757757777577577775757555575</variable><variable type="BLOCKLY_TILESET_TYPE" id="wID*de4e{=2^bm77T?Ge">7;8;8;bbbbbbbbeeeeeeeedddddddd8888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="m%lmhi$9#uBes*FBsvbz">8;8;8;8888888888888888888888888888888888888888ddddddddeeeeeeeebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="G(.RLx0?]Z~hMB]6{Q)J">9;8;8;eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888ebddddddebeeeeeebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="QjkMn!i5Fs}B69bqsU40">10;8;8;bbbbbbbbeeeeeebeddddddbe8888d8be8888d8be8888d8be8888d8be8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="~Uiv!;l:Wf/A)kLXatEV">11;8;8;8888d8be8888d8be8888d8be8888d8be8888d8beddddddbeeeeeeebebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="+,:LgR}$Zy_]YtmD=aR]">12;8;8;bbbbbbbbebeeeeeeebddddddeb8d8888eb8d8888eb8d8888eb8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="jVpO}Ivi,pg-DswTdfZ(">13;8;8;8888d8be8888d8ee8888d8dd8888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="GHFP.P4FxlO2;?1ZL,1@">14;8;8;eb8d8888ee8d8888dd8d88888888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="3x[QaDCg7j7V{SUhNFC[">15;8;8;8888888888888888888888888888888888888888dd8d8888ee8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="4:Sh@jttKK{6`fVY#=?_">16;8;8;88888888888888888888888888888888888888888888d8dd8888d8ee8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="Xb-DN[x]Nh=;3F#2[fZm">17;8;8;bbbbbbbbbb33b3bbbbb33bbbbbb33bbbbb33b3bbbbb3bbbbbbb3bbbbbbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id=")HjFnLY:qO?#z~{(xh3H">18;8;8;bdbbbbdbdbbbbbbdbbbddbbbbbdbbdbbbbdbbdbbbbbddbbbdbbbbbbdbdbbbbdb</variable><variable type="BLOCKLY_TILESET_TYPE" id=":)XP-zVF(5Caz)r%VWZg">19;8;8;bbbbbbbbbb22b2bb2bbb2bbb2bbbbbbbbb22b2bbbbbb2bbb2bbb2bbbbb22b2bb</variable><variable type="BLOCKLY_TILESET_TYPE" id="~sZ~IyQP|VVO9@,cL/6F">20;8;8;4444444444444444555555554444444444444444555555554444444444444444</variable><variable type="BLOCKLY_TILESET_TYPE" id="|rV6B2_;%QTD?iDWKui1">21;8;8;4445544444455444444554444445544444455444444554444445544444455444</variable><variable type="BLOCKLY_TILESET_TYPE" id="@$RMdj}C:YGNZfRu$a`f">22;8;8;bb5bb5bb5b5bb5b5bb5bbbbb55bb5b5555b5bb55bbbbb5bb5b5bb5b5bb5bb5bb</variable></variables><block type="pxt-on-start" id="}!(g*Ud$@P,Dwq6)O2wo" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="XKObE.v/$A$T|sw4r/9}" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkSeekPath: Array&lt;PathPosition&gt; = []" numlines="1" declaredvars="sharkSeekPath"></mutation><next><block type="variables_set" id="*?A(D/$|v7jBW07%3JgR"><field name="VAR" id="%-2(/Q.I+3Nq98ff{`3/">hitBuffer</field><value name="VALUE"><shadow type="math_number" id=",-/ZA-)3USL:NE?62S!o"><field name="NUM">4</field></shadow></value><next><block type="variables_set" id="tDDP^G|ub?S2~B-R$|S]"><field name="VAR" id="*_umw@Mwi3]`DXD[i8Al">tileSize</field><value name="VALUE"><shadow type="math_number" id="hA(#rOZRY{-@DPCym]$Y"><field name="NUM">8</field></shadow></value><next><block type="variables_set" id="jP.Z$_FrGTW7632J9aY~"><field name="VAR" id="Mdswd.!64[,}9ddX:yk$">playerMoveSpeed</field><value name="VALUE"><shadow type="math_number" id="Ync=ScrG@X@XWzh;YOFS"><field name="NUM">40</field></shadow></value><next><block type="typescript_statement" id="-/n_{7B0,Cx4xGTUjA7i" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Point {&#13;" line1="    x: number&#13;" line2="    y: number&#13;" line3="    tile: Image = null&#13;" line4="    constructor(x: number = 0, y: number = 0) {&#13;" line5="        this.x = x&#13;" line6="        this.y = y&#13;" line7="    }&#13;" line8="    getColumn(): number {&#13;" line9="        return Math.floor(this.x / tileSize);&#13;" line10="    }&#13;" line11="    getRow(): number {&#13;" line12="        return Math.floor(this.y / tileSize);&#13;" line13="    }&#13;" line14="    equals(otherPoint: Point): boolean {&#13;" line15="        return this.x === otherPoint.x &amp;&amp; this.y === otherPoint.y&#13;" line16="    }&#13;" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="}ek*gO|BG5L|*nA1~iq)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class PathPosition {&#13;" line1="    point: Point&#13;" line2="    distanceFromTarget: number&#13;" line3="    distanceFromParent: number&#13;" line4="    pathParent: PathPosition&#13;" line5="    constructor(point: Point) {&#13;" line6="        this.point = point&#13;" line7="    }&#13;" line8="    calculateDistance(otherPosition: PathPosition): number {&#13;" line9="        //using Manhattan calculation since shark can only move four directions&#13;" line10="        return Math.abs(otherPosition.point.x - this.point.x) + Math.abs(otherPosition.point.y - this.point.y)&#13;" line11="    }&#13;" line12="    equalsPathPosition(otherPathPosition: PathPosition): boolean {&#13;" line13="        return this.point.getColumn() === otherPathPosition.point.getColumn() &amp;&amp; this.point.getRow() === otherPathPosition.point.getRow()&#13;" line14="    }&#13;" line15="    equalsPoint(otherPoint: Point): boolean {&#13;" line16="        return this.point.getColumn() === otherPoint.getColumn() &amp;&amp; this.point.getRow() === otherPoint.getRow()&#13;" line17="    }&#13;" line18="    findTotalDistance(): number {&#13;" line19="        return this.distanceFromTarget + this.distanceFromParent&#13;" line20="    }&#13;" line21="}" numlines="22"></mutation><next><block type="typescript_statement" id="*AEnp(JF%!Rx4sTzgsr=" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let playerPosition: Point = new Point(0, 0)" numlines="1" declaredvars="playerPosition"></mutation><next><block type="typescript_statement" id="4S1:eQnW%J_Dro7Qb*V!" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let octopusPosition: Point = new Point(0, 0)" numlines="1" declaredvars="octopusPosition"></mutation><next><block type="typescript_statement" id="xz+S)C{AsawItWo)7E^q" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkPosition: Point = new Point(0, 0)" numlines="1" declaredvars="sharkPosition"></mutation><next><block type="variables_set" id="LCs@^I90t.a|U54*F2Wm"><field name="VAR" id=";M#-g[E[k724l9eoAN]D">mySprite</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="X:3D.=QSX,%?n).zK27|"><value name="img"><shadow type="screen_image_picker" id="%@KPD8sG^(D@jH7SmhaA"><field name="img">img`
. . . . . . . . 
. . . 1 1 . . . 
. . 1 1 1 1 . . 
3 4 1 1 1 1 4 3 
3 4 4 1 1 4 4 3 
. . 4 1 1 4 . . 
. . 1 1 1 1 . . 
. . . . . . . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="d.|8djlT^/G%kf+KPFWF"><field name="MEMBER">Player</field></shadow></value></block></value><next><block type="variables_set" id="Xv/G`:-ZRD?v-zRZbFoN"><field name="VAR" id="a(E0/XnZk7D}l_(4ijVJ">octopus</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="FfIMK.w:nw|`j7@#}P.u"><value name="img"><shadow type="screen_image_picker" id="a|}Ff`i$n4UryTRoh8(e"><field name="img">img`
. a d d d . . . . . . . a d d d d d . . . . . . . . a a d d . . 
a d d . . . . . . . . a d d d d d d d d . . . . . a d d d d d . 
a d . . . . . . . . a d d 1 . . . . . d d . . . . a d . . . d d 
a d . . . . . . . . a d 1 . . . . . . . . . . . a d 1 . . . d d 
a d . . . . . . . . a d 1 . . . . . . . . . . a d d 1 . . . . d 
a d 1 . . . . . . . a d d d . . . . . . . . a d d d 1 . . . . . 
a d d 1 . . . . . . a d d a a a a a d d . . a d d d . . . . . . 
. a d d 1 . . . . . . a a d d d d d d d d d d d 1 . . . . . . . 
. . a d d d d d d . a d d d d d a d d d d d d d 1 . . . . . . . 
. . . a a d d d d a d d d a d d d d d d a d d d . . . . . . . . 
. . . . . a d d d a d d d d d d d d d d d d d d . . . . . a d . 
. . . . . . a a a d d d d d d d d a d d d d d d d . a a a d d d 
. . . . . . . . a d d a d d d d d d d d d d a d d a d d d d d d 
. . . . . . . . d d d d d d d d d d d d d d d d d d d 1 1 . d d 
. . . . . . . . d d d d d d d 1 1 1 d d d d d d d d d . . . d d 
. . . . . . . . d d d d d d 1 a a a 1 d d d d d d . . . . . . d 
. . . . . . . a d d d d d d 1 a d a 1 d d d d d 1 . . . . d d d 
. . . . . . a d d d d d d d 1 a d a 1 d d d d d 1 . . . . d d . 
. . . . a a d d d d d d d d 1 a a a 1 d d d d 1 d . . . . d . . 
. . a a d d d d d d d d d d d 1 1 1 d d d d d 1 d d 1 . . . . . 
. a d d d d d 1 1 1 d d d d d d d d d d d d d d d d 1 . . . . . 
a d d d d . . . . . a a d d d d d d d d 1 1 . d d d d 1 . . . . 
a d d d . . . . . a d d d d d d d 1 1 1 d 1 . . . d d d 1 . . . 
a d d . . . . . . a d d d d . . . d d d d 1 . . . a d d 1 . . . 
a d d . . . . . . a d d . . . . . . a d d 1 . . . . . d d 1 . . 
a d d . . . . . . a d d . . . . . . . a d d 1 . . . . d d 1 . . 
a d d . . . . . a d d . . . . . . . . . a d 1 . . . . a d d 1 . 
d d . . . . . . a d d . . . . . . . . . a d d . . . . . d d d . 
d d . . . . . . a d d . . . . . . . . . . d d d . . . . . d d d 
d d . . . . . . a d d . . . . . . . . d . . d d . . . . . . a d 
d d d . . . . . . a d . . . . . . . . d d d d d . . . . . . d d 
. d d . . . . . . . d d d . . . . . . . d d d . . . . . . d . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="!XpnzM2sj/DFC9vXttOp"><field name="MEMBER">Enemy</field></shadow></value></block></value><next><block type="variables_set" id="L-kfXzMKi@ORrm8dyqkp"><field name="VAR" id="Sj(W?NCe@8^7#5}ZI`j,">shark</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="v]u?nA-/83P4s6k?vzFS"><value name="img"><shadow type="screen_image_picker" id="N2[oh*E|v!$cF{QM%,.r"><field name="img">img`
. . . . 8 d d . 
. . . 8 d d . . 
. . 8 d 1 . . . 
. 8 d d 1 . . . 
. 8 d d d 1 . . 
. d d d d d 1 . 
7 d d d d d d 7 
. 7 7 7 7 7 7 . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="{rFQMG9f}@N$cP1[y!}P"><field name="MEMBER">Enemy</field></shadow></value></block></value><next><block type="variables_set" id="U}VHi%Jj|BIOD[mHzIAO"><field name="VAR" id="r#E7fhJrM:ovPZxsOkE;">coin</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="4b?FK?HCLaQU{NEvyIOq"><value name="img"><shadow type="screen_image_picker" id="11Tyv;7(^QXrQ3/HvRch"><field name="img">img`
. . 4 4 4 4 . . 
. 4 5 5 5 5 4 . 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
. 4 5 5 5 5 4 . 
. . 4 4 4 4 . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="H,@{ohZ(:9~-tSb:3pbG"><field name="MEMBER">Food</field></shadow></value></block></value><next><block type="game_control_sprite" id="^kD;bi^T*p?1Vm^}:?55"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="sprite"><shadow type="variables_get" id="5j$h015Z$5P(W@%Dv}D="><field name="VAR" id=";M#-g[E[k724l9eoAN]D">mySprite</field></shadow></value><next><block type="camerafollow" id="s^]Q)%MQIvc%L9B!,~.l"><value name="sprite"><shadow type="variables_get" id="[6c$~M1vpBYh+}l!mAKf"><field name="VAR" id=";M#-g[E[k724l9eoAN]D">mySprite</field></shadow></value><next><block type="tilemap_editor" id="I$QLk%qL@zg)AuN0Y{A^"><field name="tilemap">tiles.createTilemap(
            hex``,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22],
            TileScale.Eight
        )</field><next><block type="variables_set" id="-o^1((%=G?Z#|=u2(Z84"><field name="VAR" id="PlAWR?5AKb[VB[#w(NAR">coinTiles</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="mapgettilestype" id="W[P}P:/v/acJh-K)}r9e"><value name="tile"><shadow type="tileset_tile_picker" id="+)$nZ|tzyq`_/]:M1FTS"><field name="tile">myTiles.tile6</field></shadow></value></block></value><next><block type="typescript_statement" id="DmOP:VxteXz52ww:NZqJ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="coinTiles.forEach(function (value: tiles.Location, index: number) {&#13;" line1="    let newCoin = sprites.create(coin.image, SpriteKind.Food)&#13;" line2="    tiles.placeOnTile(newCoin, value)&#13;" line3="    tiles.setTileAt(value, myTiles.tile4);&#13;" line4="})" numlines="5"></mutation><next><block type="variables_set" id="3x9qt68?B$#P$pMcav2m"><field name="VAR" id="Wr5Cb6uCTKRZ454+KdIF">playerSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="w2,)hpHek21OMgGaEtR0"><value name="LIST"><block type="mapgettilestype" id="TuG!%n%p(%YdBxhlSeoG"><value name="tile"><shadow type="tileset_tile_picker" id="0+2WA^LSp:]AD%c}8X2%"><field name="tile">myTiles.tile17</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="6Ue8b)_-Y[`t*O)^`Nm0"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="}];SWfWYjo$C2fU*YQy*"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="4$X#04=K%I^W`vh[]F-+"><field name="VAR" id=";M#-g[E[k724l9eoAN]D">mySprite</field></block></value><value name="value"><block type="typescript_expression" id="/Lzcn`Ew}AB@p-8|Mylx" editable="false"><field name="EXPRESSION">playerPosition.x = playerSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="_u6jzNn,HJR~2jZjLpn;"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="ZQ|piTwY7J;sog6WYEL/"><field name="VAR" id=";M#-g[E[k724l9eoAN]D">mySprite</field></block></value><value name="value"><block type="typescript_expression" id="rs[39i$i3dw/r|dnCZ7|" editable="false"><field name="EXPRESSION">playerPosition.y = playerSpawnTile.y</field></block></value><next><block type="mapsettileat" id="!6GOvN2j=:Q^G:jOxv:P"><value name="tile"><shadow type="tileset_tile_picker" id="kD^;7OjS5]iGT(7UO)eK"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id=";aA5d!:ey_H[]k26mxwe"><field name="VAR" id="Wr5Cb6uCTKRZ454+KdIF">playerSpawnTile</field></block></value><next><block type="variables_set" id="T3XprEO]rkO.K!()qW{;"><field name="VAR" id="jGg]EnK=rLb6#-$E./qg">octopusSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="GWFD99LHKQ]K7u5Ow/Cv"><value name="LIST"><block type="mapgettilestype" id="b8?8a#Z*:vgLd^B/+)bn"><value name="tile"><shadow type="tileset_tile_picker" id="UxVup/^}gKlivgQVtfs2"><field name="tile">myTiles.tile18</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="gowUg@1LWgpqUGn%|5~%"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="c1x8A9--7{!y^cA|B5|a"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="u`H.6}YEc.13[fEEg%wN"><field name="VAR" id="a(E0/XnZk7D}l_(4ijVJ">octopus</field></block></value><value name="value"><block type="typescript_expression" id="gtILAK{a(Fr)Xu0k6dU|" editable="false"><field name="EXPRESSION">octopusPosition.x = octopusSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="aV9I-YvuGmf`i1:XP`-_"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="=x.BF7PrZYUOkw)L9BQg"><field name="VAR" id="a(E0/XnZk7D}l_(4ijVJ">octopus</field></block></value><value name="value"><block type="typescript_expression" id="KO4SfeTey.F*zkCa!C^A" editable="false"><field name="EXPRESSION">octopusPosition.y = octopusSpawnTile.y</field></block></value><next><block type="mapsettileat" id="n!d.-}x^ejaT-3/7B/0k"><value name="tile"><shadow type="tileset_tile_picker" id="O[=M%8mg%a72RK^FIWk^"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="xy4jC7fpo=[YcAX5ZC8/"><field name="VAR" id="jGg]EnK=rLb6#-$E./qg">octopusSpawnTile</field></block></value><next><block type="variables_set" id="*(5}(EujBDjma^v4?~vS"><field name="VAR" id="bTqMk/hPw:Ox/H2!j)-a">sharkSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="{@Reb3rMsGzmto[He_8C"><value name="LIST"><block type="mapgettilestype" id="Qtv6YFAhV0hB]7Cjb1qR"><value name="tile"><shadow type="tileset_tile_picker" id="2E|N{T(HG8A(22(,.`|("><field name="tile">myTiles.tile19</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="H-R%e0lZ4_+fEcf!:17Y"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="kOiL[(y|@`DvoS/=r21~"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="UhPE|ep+b8%ut-`qxXXz"><field name="VAR" id="Sj(W?NCe@8^7#5}ZI`j,">shark</field></block></value><value name="value"><block type="typescript_expression" id=")rMGDe4{9#MJ;AJ+U@IK" editable="false"><field name="EXPRESSION">sharkPosition.x = sharkSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="6G+X}l_eT6AIyd/~^S80"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="?(;WVTb1kHnD=(^=U`sY"><field name="VAR" id="Sj(W?NCe@8^7#5}ZI`j,">shark</field></block></value><value name="value"><block type="typescript_expression" id="y^UGL3;d/7/5vOBbxK7;" editable="false"><field name="EXPRESSION">sharkPosition.y = sharkSpawnTile.y</field></block></value><next><block type="mapsettileat" id="*`vj78#s%ubKeAO$q!t6"><value name="tile"><shadow type="tileset_tile_picker" id="lZHb9_O^D$:q4W%=Txh}"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="4HcJ69I*Vuovf)n7F9fB"><field name="VAR" id="bTqMk/hPw:Ox/H2!j)-a">sharkSpawnTile</field></block></value><next><block type="typescript_statement" id="=z@l0E9V^%}caQHav4|6" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkTargetTile = new Point();" numlines="1" declaredvars="sharkTargetTile"></mutation><next><block type="typescript_statement" id="(VlQC`O0(:!r8]1{5aWw" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function positionToTile(position: number, tileSize: number): number {&#13;" line1="    return Math.floor(position / tileSize);&#13;" line2="}" numlines="3"></mutation><next><block type="typescript_statement" id="!S%?n8$I||[ED.Y]=m.[" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function isWaterTile(tileImage: Image): boolean {&#13;" line1="    if (tileImage == myTiles.tile2 ||&#13;" line2="        tileImage == myTiles.tile3 ||&#13;" line3="        tileImage == myTiles.tile5 ||&#13;" line4="        tileImage == myTiles.tile7 ||&#13;" line5="        tileImage == myTiles.tile8 ||&#13;" line6="        tileImage == myTiles.tile9 ||&#13;" line7="        tileImage == myTiles.tile10 ||&#13;" line8="        tileImage == myTiles.tile11 ||&#13;" line9="        tileImage == myTiles.tile12 ||&#13;" line10="        tileImage == myTiles.tile13 ||&#13;" line11="        tileImage == myTiles.tile14 ||&#13;" line12="        tileImage == myTiles.tile15 ||&#13;" line13="        tileImage == myTiles.tile16) {&#13;" line14="        return true&#13;" line15="    }&#13;" line16="    return false&#13;" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="CSfNudY?vJPHkAtfPld8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function isLandTile(tileImage: Image): boolean {&#13;" line1="    if (tileImage == myTiles.tile4) {&#13;" line2="        return true&#13;" line3="    }&#13;" line4="    return false&#13;" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id=";K~I5=Ddf/Le|S*$2RPO" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function checkLandBoundsCollision(character: Sprite, lastPosition: Point): Point {&#13;" line1="    let newTile: Image = tiles.getTileAt(positionToTile(character.x, tileSize), positionToTile(character.y, tileSize))&#13;" line2="    if (lastPosition.tile == null) {&#13;" line3="        lastPosition.tile = newTile&#13;" line4="    }&#13;" line5="&#13;" line6="    if (isLandTile(newTile) &amp;&amp; isWaterTile(lastPosition.tile) ||&#13;" line7="        isWaterTile(newTile) &amp;&amp; isLandTile(lastPosition.tile)) {&#13;" line8="        //todo: determine whether it's a horizontal or vertical collision and limit movement&#13;" line9="        //also need to check whether the other position change results in a tile collision, like in a corner&#13;" line10="        character.x = lastPosition.x&#13;" line11="        character.y = lastPosition.y&#13;" line12="        return lastPosition;&#13;" line13="    }&#13;" line14="    lastPosition.x = character.x&#13;" line15="    lastPosition.y = character.y&#13;" line16="    lastPosition.tile = newTile&#13;" line17="    return lastPosition&#13;" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="@vBFv:/g2#P]?nlp*OMP" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findOctopusMovePosition(octopusPosition: Point, playerPosition: Point, buffer: number): Point {&#13;" line1="    let moveLeft: boolean = playerPosition.x &lt; octopusPosition.x - buffer&#13;" line2="    let moveRight: boolean = playerPosition.x &gt; octopusPosition.x + buffer&#13;" line3="    let moveUp: boolean = playerPosition.y &lt; octopusPosition.y - buffer&#13;" line4="    let moveDown: boolean = playerPosition.y &gt; octopusPosition.y + buffer&#13;" line5="    let moveRate: number = .4&#13;" line6="&#13;" line7="    if (moveLeft) {&#13;" line8="        octopusPosition.x -= moveRate&#13;" line9="    } else if (moveRight) {&#13;" line10="        octopusPosition.x += moveRate&#13;" line11="    }&#13;" line12="    if (moveUp) {&#13;" line13="        octopusPosition.y -= moveRate&#13;" line14="    } else if (moveDown) {&#13;" line15="        octopusPosition.y += moveRate&#13;" line16="    }&#13;" line17="    return octopusPosition&#13;" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="pknH|_Zq3Bv2CFDvK4Ej" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function seekPath(startingTile: Point, targetTile: Point): Array&lt;PathPosition&gt; {&#13;" line1="    let shortestPathTile: PathPosition = null&#13;" line2="    let targetPathPosition: PathPosition = new PathPosition(targetTile)&#13;" line3="    let finalPathTile: PathPosition = null&#13;" line4="    let isValidTile: boolean = true&#13;" line5="    let finalPath: Array&lt;PathPosition&gt; = [] &#13;" line6="    let openTiles: Array&lt;PathPosition&gt; = [new PathPosition(startingTile)]&#13;" line7="    let closedTiles: Array&lt;PathPosition&gt; = []&#13;" line8="    let i: number = 0&#13;" line9="    let j: number = 0&#13;" line10="    let count: number = 0&#13;" line11="    while (openTiles.length &gt; 0) {&#13;" line12="        console.log(&quot;count &quot; + count)&#13;" line13="        count++&#13;" line14="        shortestPathTile = findShortestPathTile(openTiles)&#13;" line15="        openTiles.removeElement(shortestPathTile)&#13;" line16="        closedTiles.push(shortestPathTile)&#13;" line17="        let surroundingTiles = getSurroundingPathTiles(shortestPathTile);&#13;" line18="        for (i = 0; i &lt; surroundingTiles.length; i++) {&#13;" line19="            isValidTile = true&#13;" line20="            if (surroundingTiles[i].equalsPathPosition(targetPathPosition)) {&#13;" line21="                surroundingTiles[i].pathParent = shortestPathTile&#13;" line22="                finalPathTile = surroundingTiles[i]&#13;" line23="                console.log(&quot;here&quot;)&#13;" line24="                break&#13;" line25="            } else {&#13;" line26="                //search open tiles&#13;" line27="                for (j = 0; j &lt; openTiles.length; j++) {&#13;" line28="                    if (surroundingTiles[i].equalsPathPosition(openTiles[j])) {&#13;" line29="                        if (openTiles[j].findTotalDistance() &gt; surroundingTiles[i].findTotalDistance()) {&#13;" line30="                            openTiles[j] = surroundingTiles[i] //replace current open tile with this one&#13;" line31="                        }&#13;" line32="                        isValidTile = false&#13;" line33="                        break&#13;" line34="                    }&#13;" line35="                }&#13;" line36="                if (!isValidTile) {&#13;" line37="                    continue&#13;" line38="                }&#13;" line39="                //search closed tiles&#13;" line40="                for (j = 0; j &lt; closedTiles.length; j++) {&#13;" line41="                    if (surroundingTiles[i].equalsPathPosition(closedTiles[j])) {&#13;" line42="                        isValidTile = false&#13;" line43="                        break&#13;" line44="                    }&#13;" line45="                }&#13;" line46="                if (!isValidTile) {&#13;" line47="                    continue&#13;" line48="                }&#13;" line49="&#13;" line50="                //search map tile&#13;" line51="                surroundingTiles[i].point.tile = tiles.getTileAt(surroundingTiles[i].point.x, surroundingTiles[i].point.y)&#13;" line52="                if (isLandTile(surroundingTiles[i].point.tile)) {&#13;" line53="                    closedTiles.push(surroundingTiles[i])&#13;" line54="                    continue&#13;" line55="                }&#13;" line56="&#13;" line57="                surroundingTiles[i].pathParent = shortestPathTile&#13;" line58="                openTiles.push(surroundingTiles[i])&#13;" line59="            }&#13;" line60="            if (finalPathTile != null) {&#13;" line61="                break&#13;" line62="            }&#13;" line63="        }&#13;" line64="        if (finalPathTile != null) {&#13;" line65="            break&#13;" line66="        }&#13;" line67="    }&#13;" line68="    if (finalPathTile != null) {&#13;" line69="        //build final array&#13;" line70="        let currentPathTile: PathPosition = finalPathTile&#13;" line71="        while (currentPathTile != null) {&#13;" line72="            finalPath.insertAt(0, currentPathTile)&#13;" line73="            currentPathTile = currentPathTile.pathParent&#13;" line74="        }&#13;" line75="    }&#13;" line76="    return finalPath&#13;" line77="}" numlines="78"></mutation><next><block type="typescript_statement" id="AU[u|?!~tghi,~3@G9;$" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findShortestPathTile(openTiles: Array&lt;PathPosition&gt;): PathPosition {&#13;" line1="    let shortestPath: PathPosition = null&#13;" line2="    openTiles.forEach(function (value: PathPosition, index: number) {&#13;" line3="        if (shortestPath != null) {&#13;" line4="            if (value.findTotalDistance() &lt; shortestPath.findTotalDistance()) {&#13;" line5="                shortestPath = value&#13;" line6="            }&#13;" line7="        } else {&#13;" line8="            shortestPath = value&#13;" line9="        }&#13;" line10="    })&#13;" line11="    return shortestPath&#13;" line12="}" numlines="13"></mutation><next><block type="typescript_statement" id="hDZXUe{usKzz#t$WWoX=" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function getSurroundingPathTiles(tile: PathPosition): Array&lt;PathPosition&gt; {&#13;" line1="    let results = []&#13;" line2="    let levelWidth = 32 //todo: actually calculate the size&#13;" line3="    let levelHeight = 32 //todo: actually calculate the size&#13;" line4="    if (tile.point.y - tileSize &gt; 0) {&#13;" line5="        results.push(new PathPosition(new Point(tile.point.x, tile.point.y - tileSize)))&#13;" line6="    }&#13;" line7="    if (tile.point.x + tileSize &lt;= levelWidth * tileSize) {&#13;" line8="        results.push(new PathPosition(new Point(tile.point.x + tileSize, tile.point.y)))&#13;" line9="    }&#13;" line10="    if (tile.point.y + tileSize &lt;= levelHeight * tileSize) {&#13;" line11="        results.push(new PathPosition(new Point(tile.point.x, tile.point.y + tileSize)))&#13;" line12="    }&#13;" line13="    if (tile.point.x - tileSize &gt; 0) {&#13;" line14="        results.push(new PathPosition(new Point(tile.point.x - tileSize, tile.point.y)))&#13;" line15="    }&#13;" line16="&#13;" line17="    return results&#13;" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id=",=#)s|DFg42Dd,0^v]5v" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findSharkMovePosition(sharkPosition: Point, seekPath: Array&lt;PathPosition&gt;): Point {&#13;" line1="&#13;" line2="    //need to keep track of tile position of player and only recalculate if the player has changed tiles&#13;" line3="&#13;" line4="    return sharkPosition&#13;" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="Zn_}]TNix5DCney6kCmN" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findSharkTargetTile(playerPosition: Point): Point {&#13;" line1="    let resultGridSpot = new Point()&#13;" line2="    if (isWaterTile(playerPosition.tile)) {&#13;" line3="        resultGridSpot.y = playerPosition.y&#13;" line4="        resultGridSpot.x = playerPosition.x&#13;" line5="        return resultGridSpot&#13;" line6="    }&#13;" line7="    //todo: implement roaming&#13;" line8="&#13;" line9="    return resultGridSpot&#13;" line10="}" numlines="11"></mutation><next><block type="typescript_statement" id="u*f5Dm(|u~+ki4q!5~sZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function moveGameSprite(position: Point, sprite: Sprite): void {&#13;" line1="    sprite.x = Math.floor(position.x)&#13;" line2="    sprite.y = Math.floor(position.y)&#13;" line3="}" numlines="4"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="spritesoverlap" id="/QndVl{-F2c_|M(Z:)J|" x="500" y="140"><value name="HANDLER_DRAG_PARAM_sprite"><shadow type="argument_reporter_custom" id="]ax~(OmuxRQ:Q-UHCZl]"><mutation typename="Sprite"/><field name="VALUE">sprite</field></shadow></value><value name="kind"><shadow type="spritekind" id="F+i0Gjwm-!xKwIHl1+[!"><field name="MEMBER">Player</field></shadow></value><value name="HANDLER_DRAG_PARAM_otherSprite"><shadow type="argument_reporter_custom" id="5;rwP~O*2*k0Wqvmsl+-"><mutation typename="Sprite"/><field name="VALUE">otherSprite</field></shadow></value><value name="otherKind"><shadow type="spritekind" id="dTHt.iswieg3VurVO`C="><field name="MEMBER">Food</field></shadow></value><statement name="HANDLER"><block type="hudsetScore" id="4I8L*urbULUwe;e=gQ]Q"><value name="value"><block type="math_arithmetic" id="5GGCU$~1_Pl9K^YCWn)y"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="hudScore" id="2:h}UgeMNe.w}il5kHZJ"/></value><value name="B"><shadow type="math_number" id=")1$Wgj/*`CW)6G2jG4a#"><field name="NUM">1</field></shadow></value></block></value><next><block type="spritedestroy" id="#Jt99|Ln/jHNAjr]zs3o"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="sprite"><block type="argument_reporter_custom" id="/T;$he,:Mtz$bZAZtfps"><mutation typename="Sprite"/><field name="VALUE">otherSprite</field></block></value></block></next></block></statement></block><block type="gameupdate" id="uz+MYXmd{ZjV^5A:FaG^" x="480" y="460"><statement name="HANDLER"><block type="typescript_statement" id="MA6%1}m_vXhFDU`ylZVx" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="playerPosition = checkLandBoundsCollision(mySprite, playerPosition)" numlines="1"></mutation><next><block type="typescript_statement" id="0E6lwG$AV]|Q:t`Q(]*)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="octopusPosition = findOctopusMovePosition(octopusPosition, playerPosition, hitBuffer)" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">move octopus</comment><next><block type="typescript_statement" id="Ui9fU@JeNyaS)5XjI(.w" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="moveGameSprite(octopusPosition, octopus)" numlines="1"></mutation><next><block type="typescript_statement" id="![SXc5{%i`N?rSGJm^6d" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkTargetTile = findSharkTargetTile(playerPosition)" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">move shark</comment><next><block type="controls_if" id="^V5J6|BWtm|*,R*efk_6"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id=",8{5OM78b$*b61;Q[2l]"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="47oixijT7o{)oVFZ+Wz`"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="%Ik7a8OQD!F*GfPqm6~4" editable="false"><field name="EXPRESSION">sharkTargetTile.getColumn()</field></block></value><value name="B"><shadow type="math_number" id="6:w8VSK#U^YLkW=k4DG;"><field name="NUM">0</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="v5T1S|ZVyZM?:3c+Q{x~"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="1PBkk%re8(YIbD`$O)cq" editable="false"><field name="EXPRESSION">sharkTargetTile.getRow()</field></block></value><value name="B"><shadow type="math_number" id="ZFX:0gGY|Mn5CXZ29~||"><field name="NUM">0</field></shadow></value></block></value></block></value><statement name="DO0"><block type="controls_if" id="E)b]5T(Ed~b|U5qY_{/G"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="RIs=W?YV%3]@.h60.F3,"><field name="OP">OR</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="(6Z[fqu|Ep$`)@PvIil5"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id="x{5Wp9Zf3oH=?p0;nP=h"><value name="VALUE"><block type="variables_get" id="A(%khEw0U~hW1Y#]eP=T"><field name="VAR" id="~haG8To/Q~M)DjFunIi4">sharkSeekPath</field></block></value></block></value><value name="B"><shadow type="math_number" id="_-_`EPtpM0uLf7uuxoj)"><field name="NUM">0</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="i~jcJG{]Sx*N[oo.~B(t"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="typescript_expression" id="^kdO}wokyj2Uz9yB.}G4" editable="false"><field name="EXPRESSION">(sharkTargetTile.equals(sharkSeekPath[sharkSeekPath.length - 1].point))</field></block></value></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="9meP(W]TO*Wo8aa*FT!L" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkSeekPath = seekPath(sharkPosition, sharkTargetTile)" numlines="1"></mutation><next><block type="console_log" id="[T}_W#KrP!D!RvbI9kbE"><value name="value"><shadow type="text"><field name="TEXT"/></shadow><block type="variables_get" id="_gjD$.IM6{+wqo+`Ig9."><field name="VAR" id="~haG8To/Q~M)DjFunIi4">sharkSeekPath</field></block></value></block></next></block></statement></block></statement><next><block type="typescript_statement" id=";lXa5C(0hd/scj@1HEHy" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkPosition = findSharkMovePosition(sharkPosition, sharkSeekPath)" numlines="1"></mutation><next><block type="typescript_statement" id="tHQ@.m5e*vo5DOH~1Ago" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="moveGameSprite(sharkPosition, shark)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>