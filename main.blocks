<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable type="BLOCKLY_TILESET_TYPE" id="8~@JDsmH396AR3Vj}7:^">0;16;16;0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</variable><variable type="BLOCKLY_TILESET_TYPE" id="DP,fMLF|voV#.B7t[|;0">2;8;8;bbbbbbbbeebebbbbbbbbbbbbbbbbebeebbbbbbbbbbeeeebebbbbbbbbebbebbbe</variable><variable type="BLOCKLY_TILESET_TYPE" id="UdDk6-1Vves@jiU`uX3;">3;8;8;eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="T;wGv(6Us_9(cK1es_$X">4;8;8;7777777777777777777777777777777777777777777777777777777777777777</variable><variable type="BLOCKLY_TILESET_TYPE" id=")78-kq?^9GU`R(Z)xgq.">5;8;8;8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="{$NNgoq_V5)u(gje[|hk">6;8;8;5755557575777757757777577577775775777757757777577577775757555575</variable><variable type="BLOCKLY_TILESET_TYPE" id="j}MP!9iuRTAMzX,z7q}=">7;8;8;bbbbbbbbeeeeeeeedddddddd8888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="xQfb(UOg/XlS9{Q^n]k;">8;8;8;8888888888888888888888888888888888888888ddddddddeeeeeeeebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="H3#6sEFzl2KP3!(,tTs[">9;8;8;eb8d8888eb8d8888eb8d8888eb8d8888eb8d8888ebddddddebeeeeeebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="$CW6EUpn^RI$+Ek~_}@C">10;8;8;bbbbbbbbeeeeeebeddddddbe8888d8be8888d8be8888d8be8888d8be8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="@d[-@8E1b];L{So[MU1V">11;8;8;8888d8be8888d8be8888d8be8888d8be8888d8beddddddbeeeeeeebebbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id="QQcYJV%W+DDvhA=0J8[N">12;8;8;bbbbbbbbebeeeeeeebddddddeb8d8888eb8d8888eb8d8888eb8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="r2l}zUm#s/J0XDov$rIi">13;8;8;8888d8be8888d8ee8888d8dd8888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="SHrYd#[],io#E5$X_#:E">14;8;8;eb8d8888ee8d8888dd8d88888888888888888888888888888888888888888888</variable><variable type="BLOCKLY_TILESET_TYPE" id="mm%G;^#G/@gk~Zz-3qC*">15;8;8;8888888888888888888888888888888888888888dd8d8888ee8d8888eb8d8888</variable><variable type="BLOCKLY_TILESET_TYPE" id="q%Yln15:65/+zA_KFk$r">16;8;8;88888888888888888888888888888888888888888888d8dd8888d8ee8888d8be</variable><variable type="BLOCKLY_TILESET_TYPE" id="Hj?/Fnf3=pvk3DH_2;?u">17;8;8;bbbbbbbbbb33b3bbbbb33bbbbbb33bbbbb33b3bbbbb3bbbbbbb3bbbbbbbbbbbb</variable><variable type="BLOCKLY_TILESET_TYPE" id=")w!q~sY.CNrL;y.`Kss0">18;8;8;bdbbbbdbdbbbbbbdbbbddbbbbbdbbdbbbbdbbdbbbbbddbbbdbbbbbbdbdbbbbdb</variable><variable type="BLOCKLY_TILESET_TYPE" id="jNf()~FXFmgH+@o5:.dQ">19;8;8;bbbbbbbbbb22b2bb2bbb2bbb2bbbbbbbbb22b2bbbbbb2bbb2bbb2bbbbb22b2bb</variable><variable type="BLOCKLY_TILESET_TYPE" id="cvn{6l$.Ugd~*!Bs+rlC">20;8;8;4444444444444444555555554444444444444444555555554444444444444444</variable><variable type="BLOCKLY_TILESET_TYPE" id="QjU61f^~zIq9A`U-qE`%">21;8;8;4445544444455444444554444445544444455444444554444445544444455444</variable><variable type="BLOCKLY_TILESET_TYPE" id="aLPZOPWpLP^j,27@sOPf">22;8;8;bb5bb5bb5b5bb5b5bb5bbbbb55bb5b5555b5bb55bbbbb5bb5b5bb5b5bb5bb5bb</variable><variable id="UwLBXP@qJiw62]%P+CJT">sharkSeekPath</variable><variable id="OZ@T?j~3|tXb_w@|R|;#">hitBuffer</variable><variable id="6MS18oo$!qWw`.TC1JH)">tileSize</variable><variable id="p.S*!|kVZw(+Y8/|:Kyf">playerMoveSpeed</variable><variable id="d@q,k19P3x!9/?ou5htL">mySprite</variable><variable id="W:F5;S@sW}nYb-mTDUXG">octopus</variable><variable id="cRCyo:cruC1*_dn{!WWJ">shark</variable><variable id="EdtGUa1A1bHwz.!VnLs1">coin</variable><variable id="Nz:AaxDWq]1.%miKl1Ok">coinTiles</variable><variable id="!1u@;h5~Y#I4!=;Gk!gm">playerSpawnTile</variable><variable id="DnSViz,-(|sN$k|qr!lO">octopusSpawnTile</variable><variable id="wPI-fV.`k:AOLl7cDcEz">sharkSpawnTile</variable><variable type="KIND_SpriteKind" id="lJs1|Z`ZS9-({55I^Qal">Player</variable><variable type="KIND_SpriteKind" id="CyEZEd#[X4PSbf,UZ8O;">Projectile</variable><variable type="KIND_SpriteKind" id="d.h%CB{+[?O|Os;^I{Y5">Food</variable><variable type="KIND_SpriteKind" id="hBT?k|L5({xt32+4OBt{">Enemy</variable></variables><block type="pxt-on-start" id="_[}?!|lKr*,lF).9zw,;" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="$_xqsHYB=]WZYOwG6f=t" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkSeekPath: Array&lt;PathPosition&gt; = []" numlines="1" declaredvars="sharkSeekPath"></mutation><next><block type="variables_set" id="lPy*X]m{yXp+.l4{I8I,"><field name="VAR" id="OZ@T?j~3|tXb_w@|R|;#">hitBuffer</field><value name="VALUE"><shadow type="math_number" id="h4DG7z=7xdQgdvj[aYap"><field name="NUM">4</field></shadow></value><next><block type="variables_set" id="2((*}rJx!t[qUwz-_17%"><field name="VAR" id="6MS18oo$!qWw`.TC1JH)">tileSize</field><value name="VALUE"><shadow type="math_number" id="yDpju@ua8uGB~21Pe7;r"><field name="NUM">8</field></shadow></value><next><block type="variables_set" id="T+g,PT1Tpk/UqO@$4_w*"><field name="VAR" id="p.S*!|kVZw(+Y8/|:Kyf">playerMoveSpeed</field><value name="VALUE"><shadow type="math_number" id="og}ytnxYPU?,tIdQmso1"><field name="NUM">40</field></shadow></value><next><block type="typescript_statement" id="jh;_Nuv~#,5E|L#C2:G3" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Point {" line1="    x: number" line2="    y: number" line3="    tile: Image = null" line4="    constructor(x: number = 0, y: number = 0) {" line5="        this.x = x" line6="        this.y = y" line7="    }" line8="    getColumn(): number {" line9="        return Math.floor(this.x / tileSize);" line10="    }" line11="    getRow(): number {" line12="        return Math.floor(this.y / tileSize);" line13="    }" line14="    equals(otherPoint: Point): boolean {" line15="        return this.x === otherPoint.x &amp;&amp; this.y === otherPoint.y" line16="    }" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="2N.B?lvX:VekGPOdA!;E" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class PathPosition {" line1="    point: Point" line2="    distanceFromTarget: number" line3="    distanceFromParent: number" line4="    pathParent: PathPosition" line5="    constructor(point: Point) {" line6="        this.point = point" line7="    }" line8="    calculateDistance(otherPosition: PathPosition): number {" line9="        //using Manhattan calculation since shark can only move four directions" line10="        return Math.abs(otherPosition.point.x - this.point.x) + Math.abs(otherPosition.point.y - this.point.y)" line11="    }" line12="    equalsPathPosition(otherPathPosition: PathPosition): boolean {" line13="        return this.point.getColumn() === otherPathPosition.point.getColumn() &amp;&amp; this.point.getRow() === otherPathPosition.point.getRow()" line14="    }" line15="    equalsPoint(otherPoint: Point): boolean {" line16="        return this.point.getColumn() === otherPoint.getColumn() &amp;&amp; this.point.getRow() === otherPoint.getRow()" line17="    }" line18="    findTotalDistance(): number {" line19="        return this.distanceFromTarget + this.distanceFromParent" line20="    }" line21="}" numlines="22"></mutation><next><block type="typescript_statement" id="B)/%A6)=Pmqn%+Zx=-Hb" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let playerPosition: Point = new Point(0, 0)" numlines="1" declaredvars="playerPosition"></mutation><next><block type="typescript_statement" id="!@@t#UFT4F/X2QLVP0UZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let octopusPosition: Point = new Point(0, 0)" numlines="1" declaredvars="octopusPosition"></mutation><next><block type="typescript_statement" id="87Zg/;X1Z|IyV.Z[Cb:k" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkPosition: Point = new Point(0, 0)" numlines="1" declaredvars="sharkPosition"></mutation><next><block type="variables_set" id="*HwhvaONr*]tz15A[Egw"><field name="VAR" id="d@q,k19P3x!9/?ou5htL">mySprite</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="0_7K.VtRgex1Eh;_tQ.["><value name="img"><shadow type="screen_image_picker" id="l;**287CaJWu$A%)8;Aq"><field name="img">img`
. . . . . . . . 
. . . 1 1 . . . 
. . 1 1 1 1 . . 
3 4 1 1 1 1 4 3 
3 4 4 1 1 4 4 3 
. . 4 1 1 4 . . 
. . 1 1 1 1 . . 
. . . . . . . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="CCy%AyqN5oZP77btSzrd"><field name="MEMBER">Player</field></shadow></value></block></value><next><block type="variables_set" id="NNjnbZm9#Kf}OFC;Td{F"><field name="VAR" id="W:F5;S@sW}nYb-mTDUXG">octopus</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="-RNmrPy/0)4hcxNLs6h4"><value name="img"><shadow type="screen_image_picker" id="j^drh^rdDdrdf.2^Kk|S"><field name="img">img`
. a d d d . . . . . . . a d d d d d . . . . . . . . a a d d . . 
a d d . . . . . . . . a d d d d d d d d . . . . . a d d d d d . 
a d . . . . . . . . a d d 1 . . . . . d d . . . . a d . . . d d 
a d . . . . . . . . a d 1 . . . . . . . . . . . a d 1 . . . d d 
a d . . . . . . . . a d 1 . . . . . . . . . . a d d 1 . . . . d 
a d 1 . . . . . . . a d d d . . . . . . . . a d d d 1 . . . . . 
a d d 1 . . . . . . a d d a a a a a d d . . a d d d . . . . . . 
. a d d 1 . . . . . . a a d d d d d d d d d d d 1 . . . . . . . 
. . a d d d d d d . a d d d d d a d d d d d d d 1 . . . . . . . 
. . . a a d d d d a d d d a d d d d d d a d d d . . . . . . . . 
. . . . . a d d d a d d d d d d d d d d d d d d . . . . . a d . 
. . . . . . a a a d d d d d d d d a d d d d d d d . a a a d d d 
. . . . . . . . a d d a d d d d d d d d d d a d d a d d d d d d 
. . . . . . . . d d d d d d d d d d d d d d d d d d d 1 1 . d d 
. . . . . . . . d d d d d d d 1 1 1 d d d d d d d d d . . . d d 
. . . . . . . . d d d d d d 1 a a a 1 d d d d d d . . . . . . d 
. . . . . . . a d d d d d d 1 a d a 1 d d d d d 1 . . . . d d d 
. . . . . . a d d d d d d d 1 a d a 1 d d d d d 1 . . . . d d . 
. . . . a a d d d d d d d d 1 a a a 1 d d d d 1 d . . . . d . . 
. . a a d d d d d d d d d d d 1 1 1 d d d d d 1 d d 1 . . . . . 
. a d d d d d 1 1 1 d d d d d d d d d d d d d d d d 1 . . . . . 
a d d d d . . . . . a a d d d d d d d d 1 1 . d d d d 1 . . . . 
a d d d . . . . . a d d d d d d d 1 1 1 d 1 . . . d d d 1 . . . 
a d d . . . . . . a d d d d . . . d d d d 1 . . . a d d 1 . . . 
a d d . . . . . . a d d . . . . . . a d d 1 . . . . . d d 1 . . 
a d d . . . . . . a d d . . . . . . . a d d 1 . . . . d d 1 . . 
a d d . . . . . a d d . . . . . . . . . a d 1 . . . . a d d 1 . 
d d . . . . . . a d d . . . . . . . . . a d d . . . . . d d d . 
d d . . . . . . a d d . . . . . . . . . . d d d . . . . . d d d 
d d . . . . . . a d d . . . . . . . . d . . d d . . . . . . a d 
d d d . . . . . . a d . . . . . . . . d d d d d . . . . . . d d 
. d d . . . . . . . d d d . . . . . . . d d d . . . . . . d . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="ff3]!ei,/2K(7O^)Su]h"><field name="MEMBER">Enemy</field></shadow></value></block></value><next><block type="variables_set" id="I`ne$9^?#vO#ENstQj:~"><field name="VAR" id="cRCyo:cruC1*_dn{!WWJ">shark</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="w`x~3%AZ,[M518/_X=@."><value name="img"><shadow type="screen_image_picker" id="KN;,!HhFLd7n9@q-Cytu"><field name="img">img`
. . . . 8 d d . 
. . . 8 d d . . 
. . 8 d 1 . . . 
. 8 d d 1 . . . 
. 8 d d d 1 . . 
. d d d d d 1 . 
7 d d d d d d 7 
. 7 7 7 7 7 7 . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="y-]A+T]s2$|Ieg={EIyV"><field name="MEMBER">Enemy</field></shadow></value></block></value><next><block type="variables_set" id="1G]UFUaABN0hC3mu2|7g"><field name="VAR" id="EdtGUa1A1bHwz.!VnLs1">coin</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate" id="%oE9|7,82SF4k_T^iE%h"><value name="img"><shadow type="screen_image_picker" id=".W3A9{u,9Z^@Nl;2*vS9"><field name="img">img`
. . 4 4 4 4 . . 
. 4 5 5 5 5 4 . 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
4 5 5 4 5 5 5 4 
. 4 5 5 5 5 4 . 
. . 4 4 4 4 . . 
`</field></shadow></value><value name="kind"><shadow type="spritekind" id="VfC9U/!.%NhEGN#p/wXv"><field name="MEMBER">Food</field></shadow></value></block></value><next><block type="game_control_sprite" id="z5xI$f6TWN5P7:k9niH*"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="sprite"><shadow type="variables_get" id="FF/r+Xg=Kn-M{8/[:.q+"><field name="VAR" id="d@q,k19P3x!9/?ou5htL">mySprite</field></shadow></value><next><block type="camerafollow" id="e_z0-6o*,Tz@4I*gu/D3"><value name="sprite"><shadow type="variables_get" id="{a:NKmzaggvRC`LH!vO7"><field name="VAR" id="d@q,k19P3x!9/?ou5htL">mySprite</field></shadow></value><next><block type="tilemap_editor" id="fZ([1(U9=^yA3t9uv}aP"><field name="tilemap">tiles.createTilemap(
            hex`2000200001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010110010101010101010101010101010101010101010101010101110101010101010101010101010101010101010101010101010101010101010101010101010101010115010101010101010101010101010101010101150101010101010101010101010101011313010101010101010101010101010101010101010101010101010101010102030303030303030303030303030314010101010101010101010101120101010203030303030303030303030303031401010101010101010101010101010101020503040101010101010101010101010101010101010101010101010101010102030304011501010101010101010101011501010101010101010101010101010203050401010101010101010101010101010101010101010101010101010101020303040101010101010101010101010101010101010101010101010101010102050304010101010101010101010101010101010101010101010101010101010203030401010101010101010101010101010101010101010101010101010101020305040101010101010101010101010101010101010101010101010101010102030304010101010101010101010101010101010101010101010101010101010205030401010101010101010101010101010101010101010101010101010101020303040101010101010101010101010101010101010101010101010101010102030504010101010101010101010101010101010101010101010101010101010203030401010101010101010101010101010101010101010101010101010101020503040101010101010101010101010101010101010101010101010101010101131301010101010101010101010101010101010101010101010101010115010101010101150101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22],
            TileScale.Eight
        )</field><next><block type="variables_set" id="J73*+/87u]PD-^os;q~!"><field name="VAR" id="Nz:AaxDWq]1.%miKl1Ok">coinTiles</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="mapgettilestype" id="N`2V:z^!k@xKa30CG6:~"><value name="tile"><shadow type="tileset_tile_picker" id="`BQ$*GMh$!w=$^C#BT:%"><field name="tile">myTiles.tile6</field></shadow></value></block></value><next><block type="typescript_statement" id="g2t^4qy0myVGatLN7fl," editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="coinTiles.forEach(function (value: tiles.Location, index: number) {" line1="    let newCoin = sprites.create(coin.image, SpriteKind.Food)" line2="    tiles.placeOnTile(newCoin, value)" line3="    tiles.setTileAt(value, myTiles.tile4);" line4="})" numlines="5"></mutation><next><block type="variables_set" id="[S%y7vQWSM5LERzw]heK"><field name="VAR" id="!1u@;h5~Y#I4!=;Gk!gm">playerSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="KI+m/=1.yn0W(}`HF1bp"><value name="LIST"><block type="mapgettilestype" id="YTig38g#1G.cJ~Wj!%Tb"><value name="tile"><shadow type="tileset_tile_picker" id="MA-dy}r29J84Q|[r}rR+"><field name="tile">myTiles.tile17</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="anaM57/|DNUFfcz_vNUd"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="%P3E=Sy+6{,Z?1~QHISq"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="w*(vVb{#s2|6Xwl[]/J)"><field name="VAR" id="d@q,k19P3x!9/?ou5htL">mySprite</field></block></value><value name="value"><block type="typescript_expression" id="E4To,Z2Np6qaJ0?!e3.J" editable="false"><field name="EXPRESSION">playerPosition.x = playerSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="WFn$=m$vAzH3j_B1YwGh"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="ETTrm[$hbdox$#{4x^am"><field name="VAR" id="d@q,k19P3x!9/?ou5htL">mySprite</field></block></value><value name="value"><block type="typescript_expression" id=":db8@`CxmLaO,vwSjq|}" editable="false"><field name="EXPRESSION">playerPosition.y = playerSpawnTile.y</field></block></value><next><block type="mapsettileat" id=";?XN*v;IM/$U-i]4F=_f"><value name="tile"><shadow type="tileset_tile_picker" id="e;FNH`]nHn7`D~NbNYU!"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="Dgku6DbSD65vFLV8`Z1+"><field name="VAR" id="!1u@;h5~Y#I4!=;Gk!gm">playerSpawnTile</field></block></value><next><block type="variables_set" id="S|-wY|1$#7gN~eE8g?e;"><field name="VAR" id="DnSViz,-(|sN$k|qr!lO">octopusSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="`8?dE~s{(m(E_QfztF]M"><value name="LIST"><block type="mapgettilestype" id="ZVJ@iqi8?o.=Fzug%LLI"><value name="tile"><shadow type="tileset_tile_picker" id="eM@+3im[LgoMh*YIa#S1"><field name="tile">myTiles.tile18</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="WmigI=OB={w~oc~KhrOn"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="KJk|_f*NMDc.v[7?Wu(%"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="e]5a{iD34k=dLyqp2kYf"><field name="VAR" id="W:F5;S@sW}nYb-mTDUXG">octopus</field></block></value><value name="value"><block type="typescript_expression" id="^U;mQ(E^2n~rPc`C|DN@" editable="false"><field name="EXPRESSION">octopusPosition.x = octopusSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="3v=S%q!UZU7%w1X-$r$2"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id=",Dj@hl+!lXgry2YeDdm/"><field name="VAR" id="W:F5;S@sW}nYb-mTDUXG">octopus</field></block></value><value name="value"><block type="typescript_expression" id="$]Fr^Qzc|-*O%updpWCM" editable="false"><field name="EXPRESSION">octopusPosition.y = octopusSpawnTile.y</field></block></value><next><block type="mapsettileat" id="c`ZX#Q|ZOnz~0]!4c_mH"><value name="tile"><shadow type="tileset_tile_picker" id="|h1G71c2a9{]d:]`jj3;"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id=":vG%q}pU=h{g|TjQ8|PH"><field name="VAR" id="DnSViz,-(|sN$k|qr!lO">octopusSpawnTile</field></block></value><next><block type="variables_set" id="g~aMYbT%tHC06%eSi{y5"><field name="VAR" id="wPI-fV.`k:AOLl7cDcEz">sharkSpawnTile</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id=":6K[=Zk8x.pUMJtI?6!Z"><value name="LIST"><block type="mapgettilestype" id=".G!Y;/$19#Umg7(d-S9w"><value name="tile"><shadow type="tileset_tile_picker" id="9v~`YeA6YM*B^sA8K9%Q"><field name="tile">myTiles.tile19</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number" id="~WlL9Zr)}gTkr7^}e0KK"><field name="NUM">0</field></shadow></value></block></value><next><block type="Sprite_blockCombine_set" id="41B:/xkNT!b:he+9*%{v"><field name="property">Sprite.x@set</field><value name="mySprite"><block type="variables_get" id="tb*~-Lv`%w.vTn[Jp]!a"><field name="VAR" id="cRCyo:cruC1*_dn{!WWJ">shark</field></block></value><value name="value"><block type="typescript_expression" id="}|;BKHXP;uiP`z]d([EY" editable="false"><field name="EXPRESSION">sharkPosition.x = sharkSpawnTile.x</field></block></value><next><block type="Sprite_blockCombine_set" id="V/briTssU@{VAJtcj#K5"><field name="property">Sprite.y@set</field><value name="mySprite"><block type="variables_get" id="M:b[7p,W1VrnbAVVz7;p"><field name="VAR" id="cRCyo:cruC1*_dn{!WWJ">shark</field></block></value><value name="value"><block type="typescript_expression" id="oSYc:gZOx_aIs|oa3=!(" editable="false"><field name="EXPRESSION">sharkPosition.y = sharkSpawnTile.y</field></block></value><next><block type="mapsettileat" id="9).reaGy#n@I@J#{}C?~"><value name="tile"><shadow type="tileset_tile_picker" id="g%?Q@,8,YIXZ_pa57![x"><field name="tile">myTiles.tile2</field></shadow></value><value name="loc"><shadow type="mapgettile"/><block type="variables_get" id="F8Ob`?:)wz[3}nsFw*#l"><field name="VAR" id="wPI-fV.`k:AOLl7cDcEz">sharkSpawnTile</field></block></value><next><block type="typescript_statement" id="Ey%~z,ghS%ZD?q6hYk~6" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let sharkTargetTile = new Point();" numlines="1" declaredvars="sharkTargetTile"></mutation><next><block type="typescript_statement" id="(1dott)R4D~$T#vS95BN" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function positionToTile(position: number, tileSize: number): number {" line1="    return Math.floor(position / tileSize);" line2="}" numlines="3"></mutation><next><block type="typescript_statement" id="s]7q{6uncPs@Ay6YvD}o" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function isWaterTile(tileImage: Image): boolean {" line1="    if (tileImage == myTiles.tile2 ||" line2="        tileImage == myTiles.tile3 ||" line3="        tileImage == myTiles.tile5 ||" line4="        tileImage == myTiles.tile7 ||" line5="        tileImage == myTiles.tile8 ||" line6="        tileImage == myTiles.tile9 ||" line7="        tileImage == myTiles.tile10 ||" line8="        tileImage == myTiles.tile11 ||" line9="        tileImage == myTiles.tile12 ||" line10="        tileImage == myTiles.tile13 ||" line11="        tileImage == myTiles.tile14 ||" line12="        tileImage == myTiles.tile15 ||" line13="        tileImage == myTiles.tile16) {" line14="        return true" line15="    }" line16="    return false" line17="}" numlines="18"></mutation><next><block type="typescript_statement" id="5-!8oskNtw*NML?m[+$G" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function isLandTile(tileImage: Image): boolean {" line1="    if (tileImage == myTiles.tile4) {" line2="        return true" line3="    }" line4="    return false" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="Xen}*$G3EhpJ$GbY%/C~" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function checkLandBoundsCollision(character: Sprite, lastPosition: Point): Point {" line1="    let newTile: Image = tiles.getTileAt(positionToTile(character.x, tileSize), positionToTile(character.y, tileSize))" line2="    if (lastPosition.tile == null) {" line3="        lastPosition.tile = newTile" line4="    }" line5="" line6="    if (isLandTile(newTile) &amp;&amp; isWaterTile(lastPosition.tile) ||" line7="        isWaterTile(newTile) &amp;&amp; isLandTile(lastPosition.tile)) {" line8="        //todo: determine whether it's a horizontal or vertical collision and limit movement" line9="        //also need to check whether the other position change results in a tile collision, like in a corner" line10="        character.x = lastPosition.x" line11="        character.y = lastPosition.y" line12="        return lastPosition;" line13="    }" line14="    lastPosition.x = character.x" line15="    lastPosition.y = character.y" line16="    lastPosition.tile = newTile" line17="    return lastPosition" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="mgddIe3,ug6be!1ZTX~:" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findOctopusMovePosition(octopusPosition: Point, playerPosition: Point, buffer: number): Point {" line1="    let moveLeft: boolean = playerPosition.x &lt; octopusPosition.x - buffer" line2="    let moveRight: boolean = playerPosition.x &gt; octopusPosition.x + buffer" line3="    let moveUp: boolean = playerPosition.y &lt; octopusPosition.y - buffer" line4="    let moveDown: boolean = playerPosition.y &gt; octopusPosition.y + buffer" line5="    let moveRate: number = .4" line6="" line7="    if (moveLeft) {" line8="        octopusPosition.x -= moveRate" line9="    } else if (moveRight) {" line10="        octopusPosition.x += moveRate" line11="    }" line12="    if (moveUp) {" line13="        octopusPosition.y -= moveRate" line14="    } else if (moveDown) {" line15="        octopusPosition.y += moveRate" line16="    }" line17="    return octopusPosition" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="~sUCNN*7KV1O9/t;tT-/" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function seekPath(startingTile: Point, targetTile: Point): Array&lt;PathPosition&gt; {" line1="    let shortestPathTile: PathPosition = null" line2="    let targetPathPosition: PathPosition = new PathPosition(targetTile)" line3="    let finalPathTile: PathPosition = null" line4="    let isValidTile: boolean = true" line5="    let finalPath: Array&lt;PathPosition&gt; = [] " line6="    let openTiles: Array&lt;PathPosition&gt; = [new PathPosition(startingTile)]" line7="    let closedTiles: Array&lt;PathPosition&gt; = []" line8="    let i: number = 0" line9="    let j: number = 0" line10="    let count: number = 0" line11="    while (openTiles.length &gt; 0) {" line12="        console.log(&quot;count &quot; + count)" line13="        count++" line14="        shortestPathTile = findShortestPathTile(openTiles)" line15="        openTiles.removeElement(shortestPathTile)" line16="        closedTiles.push(shortestPathTile)" line17="        let surroundingTiles = getSurroundingPathTiles(shortestPathTile);" line18="        for (i = 0; i &lt; surroundingTiles.length; i++) {" line19="            isValidTile = true" line20="            if (surroundingTiles[i].equalsPathPosition(targetPathPosition)) {" line21="                surroundingTiles[i].pathParent = shortestPathTile" line22="                finalPathTile = surroundingTiles[i]" line23="                console.log(&quot;here&quot;)" line24="                break" line25="            } else {" line26="                //search open tiles" line27="                for (j = 0; j &lt; openTiles.length; j++) {" line28="                    if (surroundingTiles[i].equalsPathPosition(openTiles[j])) {" line29="                        if (openTiles[j].findTotalDistance() &gt; surroundingTiles[i].findTotalDistance()) {" line30="                            openTiles[j] = surroundingTiles[i] //replace current open tile with this one" line31="                        }" line32="                        isValidTile = false" line33="                        break" line34="                    }" line35="                }" line36="                if (!isValidTile) {" line37="                    continue" line38="                }" line39="                //search closed tiles" line40="                for (j = 0; j &lt; closedTiles.length; j++) {" line41="                    if (surroundingTiles[i].equalsPathPosition(closedTiles[j])) {" line42="                        isValidTile = false" line43="                        break" line44="                    }" line45="                }" line46="                if (!isValidTile) {" line47="                    continue" line48="                }" line49="" line50="                //search map tile" line51="                surroundingTiles[i].point.tile = tiles.getTileAt(surroundingTiles[i].point.x, surroundingTiles[i].point.y)" line52="                if (isLandTile(surroundingTiles[i].point.tile)) {" line53="                    closedTiles.push(surroundingTiles[i])" line54="                    continue" line55="                }" line56="" line57="                surroundingTiles[i].pathParent = shortestPathTile" line58="                openTiles.push(surroundingTiles[i])" line59="            }" line60="            if (finalPathTile != null) {" line61="                break" line62="            }" line63="        }" line64="        if (finalPathTile != null) {" line65="            break" line66="        }" line67="    }" line68="    if (finalPathTile != null) {" line69="        //build final array" line70="        let currentPathTile: PathPosition = finalPathTile" line71="        while (currentPathTile != null) {" line72="            finalPath.insertAt(0, currentPathTile)" line73="            currentPathTile = currentPathTile.pathParent" line74="        }" line75="    }" line76="    return finalPath" line77="}" numlines="78"></mutation><next><block type="typescript_statement" id="S$2bXP%I5E+SjO!E(Cjd" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findShortestPathTile(openTiles: Array&lt;PathPosition&gt;): PathPosition {" line1="    let shortestPath: PathPosition = null" line2="    openTiles.forEach(function (value: PathPosition, index: number) {" line3="        if (shortestPath != null) {" line4="            if (value.findTotalDistance() &lt; shortestPath.findTotalDistance()) {" line5="                shortestPath = value" line6="            }" line7="        } else {" line8="            shortestPath = value" line9="        }" line10="    })" line11="    return shortestPath" line12="}" numlines="13"></mutation><next><block type="typescript_statement" id="woNffW6aIM`x:f?2gFuJ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function getSurroundingPathTiles(tile: PathPosition): Array&lt;PathPosition&gt; {" line1="    let results = []" line2="    let levelWidth = 32 //todo: actually calculate the size" line3="    let levelHeight = 32 //todo: actually calculate the size" line4="    if (tile.point.y - tileSize &gt; 0) {" line5="        results.push(new PathPosition(new Point(tile.point.x, tile.point.y - tileSize)))" line6="    }" line7="    if (tile.point.x + tileSize &lt;= levelWidth * tileSize) {" line8="        results.push(new PathPosition(new Point(tile.point.x + tileSize, tile.point.y)))" line9="    }" line10="    if (tile.point.y + tileSize &lt;= levelHeight * tileSize) {" line11="        results.push(new PathPosition(new Point(tile.point.x, tile.point.y + tileSize)))" line12="    }" line13="    if (tile.point.x - tileSize &gt; 0) {" line14="        results.push(new PathPosition(new Point(tile.point.x - tileSize, tile.point.y)))" line15="    }" line16="" line17="    return results" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="o~O#0dTl*8j)fhjCMeyx" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findSharkMovePosition(sharkPosition: Point, seekPath: Array&lt;PathPosition&gt;): Point {" line1="" line2="    //need to keep track of tile position of player and only recalculate if the player has changed tiles" line3="" line4="    return sharkPosition" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="/U(([O[aTaIaUeCbi=c)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function findSharkTargetTile(playerPosition: Point): Point {" line1="    let resultGridSpot = new Point()" line2="    if (isWaterTile(playerPosition.tile)) {" line3="        resultGridSpot.y = playerPosition.y" line4="        resultGridSpot.x = playerPosition.x" line5="        return resultGridSpot" line6="    }" line7="    //todo: implement roaming" line8="" line9="    return resultGridSpot" line10="}" numlines="11"></mutation><next><block type="typescript_statement" id="J|M.A.^C6!Ak[kS_Ud.P" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function moveGameSprite(position: Point, sprite: Sprite): void {" line1="    sprite.x = Math.floor(position.x)" line2="    sprite.y = Math.floor(position.y)" line3="}" numlines="4"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="spritesoverlap" id="1(%BY~TEGdUjU):}aXH?" x="490" y="130"><value name="HANDLER_DRAG_PARAM_sprite"><shadow type="argument_reporter_custom" id=":LG[/WrU;n#N7y;/8i#7"><mutation typename="Sprite"/><field name="VALUE">sprite</field></shadow></value><value name="kind"><shadow type="spritekind" id="zSV2;`j/Hc6#rY(C_=kh"><field name="MEMBER">Player</field></shadow></value><value name="HANDLER_DRAG_PARAM_otherSprite"><shadow type="argument_reporter_custom" id="omNa)*Q3.eeRja[#.`~~"><mutation typename="Sprite"/><field name="VALUE">otherSprite</field></shadow></value><value name="otherKind"><shadow type="spritekind" id="b#8o#nT(,DoL5%+:RoXg"><field name="MEMBER">Food</field></shadow></value><statement name="HANDLER"><block type="hudsetScore" id="r^(9$@5t]/Rhy_~QPXr#"><value name="value"><block type="math_arithmetic" id="42X}|].Di{Yh5}%Vh$q6"><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="hudScore" id="%qTF)C{h0Ke}@u0}$q:G"/></value><value name="B"><shadow type="math_number" id="/3RVci,,ierw?p$eZ~|l"><field name="NUM">1</field></shadow></value></block></value><next><block type="spritedestroy" id=",`e{;y:rG*u#P!iZ@,`x"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="false"></mutation><value name="sprite"><block type="argument_reporter_custom" id="pq_hYg_W@.l^A-IUE`|+"><mutation typename="Sprite"/><field name="VALUE">otherSprite</field></block></value></block></next></block></statement></block><block type="gameupdate" id="=U!b+M-5/Uc%$mdQ{-#9" x="470" y="450"><statement name="HANDLER"><block type="typescript_statement" id="y!]l{{%2cKK8W#:}czHZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="playerPosition = checkLandBoundsCollision(mySprite, playerPosition)" numlines="1"></mutation><next><block type="typescript_statement" id="BBILNz4lpW+8tEJ[=WpD" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="octopusPosition = findOctopusMovePosition(octopusPosition, playerPosition, hitBuffer)" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">move octopus</comment><next><block type="typescript_statement" id="wc-:R^fe/T]TLs?aThP!" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="moveGameSprite(octopusPosition, octopus)" numlines="1"></mutation><next><block type="typescript_statement" id="ew8FgJuR2C]ytY#XJWuJ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkTargetTile = findSharkTargetTile(playerPosition)" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">move shark</comment><next><block type="controls_if" id="Bj.@NMar!j_OmlLNsGvD"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="w`YzkIqSmnAJ$Do:b~Aa"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id=",A{z?Wp3.atj0J}py8hZ"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="ah`54C1Nq=9zR%/{Q/!0" editable="false"><field name="EXPRESSION">sharkTargetTile.getColumn()</field></block></value><value name="B"><shadow type="math_number" id="Qn4,q!DJn_-{_~P?nagO"><field name="NUM">0</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="%w;V}0Y,Yqlg/345W1!!"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="3r,pB:[XE!*rKN(22Yi$" editable="false"><field name="EXPRESSION">sharkTargetTile.getRow()</field></block></value><value name="B"><shadow type="math_number" id="(oB4hAJ4ZQo,D(VyTsB3"><field name="NUM">0</field></shadow></value></block></value></block></value><statement name="DO0"><block type="controls_if" id="VryF7+l^ERhuseR;$1QU"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="2E?Hi%KSQbqh~V)HJ?`2"><field name="OP">OR</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="DAHD].Vo|pg|zH+R/J9r"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id="RH~ZA[.fTzCR`|_bk)UF"><value name="VALUE"><block type="variables_get" id="N;~#dT%^rM2qLEV:2)_6"><field name="VAR" id="UwLBXP@qJiw62]%P+CJT">sharkSeekPath</field></block></value></block></value><value name="B"><shadow type="math_number" id="o#TLtz~lx7QsS1-95]a="><field name="NUM">0</field></shadow></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="63xwu1Csriw=^[KZRpU="><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="typescript_expression" id="0yZ)_;s^w]9:5UVr4F6t" editable="false"><field name="EXPRESSION">(sharkTargetTile.equals(sharkSeekPath[sharkSeekPath.length - 1].point))</field></block></value></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="_X4QnjQg*~%VE_g}hHKo" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkSeekPath = seekPath(sharkPosition, sharkTargetTile)" numlines="1"></mutation><next><block type="console_log" id="^-ckyT7z+1$#NBzK~SfI"><value name="value"><shadow type="text"><field name="TEXT"/></shadow><block type="variables_get" id="SVYaamlk[Qj.2}rG^Al)"><field name="VAR" id="UwLBXP@qJiw62]%P+CJT">sharkSeekPath</field></block></value></block></next></block></statement></block></statement><next><block type="typescript_statement" id=",HOyYi;Jqe3AbI`_Nm@V" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="sharkPosition = findSharkMovePosition(sharkPosition, sharkSeekPath)" numlines="1"></mutation><next><block type="typescript_statement" id="UwpP=Q[04}hx2vNrHa(2" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="moveGameSprite(sharkPosition, shark)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>